# üìÅ base/models.py - –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ –±–∞–∑–æ–≤—ã–µ –º–æ–¥–µ–ª–∏
# üîß –û–±—â–∏–µ –ø–æ–ª—è –∏ –º–µ—Ç–æ–¥—ã –¥–ª—è –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π –ø—Ä–æ–µ–∫—Ç–∞

import uuid
from django.db import models
from django.utils.text import slugify
from django_ckeditor_5.fields import CKEditor5Field


class BaseModel(models.Model):
    """
    üîß –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω–∞—è –±–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å —Å–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –ø–æ–ª—è–º–∏

    –°–æ–¥–µ—Ä–∂–∏—Ç –æ–±—â–∏–µ –ø–æ–ª—è –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å —É –í–°–ï–• –º–æ–¥–µ–ª–µ–π –≤ –ø—Ä–æ–µ–∫—Ç–µ
    """
    uid = models.UUIDField(
        primary_key=True,
        default=uuid.uuid4,
        editable=False,
        verbose_name="–£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID"
    )

    created_at = models.DateTimeField(
        auto_now_add=True,
        verbose_name="–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è"
    )

    updated_at = models.DateTimeField(
        auto_now=True,
        verbose_name="–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è"
    )

    class Meta:
        abstract = True  # ‚úÖ –ù–µ —Å–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É!


class BaseCategory(BaseModel):
    """
    üîß –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω–∞—è –º–æ–¥–µ–ª—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –∏ –ª–æ–¥–æ–∫

    –û–±—â–∏–µ –ø–æ–ª—è –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    """
    category_name = models.CharField(
        max_length=200,
        verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
        help_text="–û—Å–Ω–æ–≤–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
    )

    slug = models.SlugField(
        unique=True,
        max_length=255,
        verbose_name="URL-–∞–¥—Ä–µ—Å",
        help_text="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"
    )

    # üìù SEO –ø–æ–ª—è
    page_title = models.CharField(
        max_length=200,
        blank=True,
        verbose_name="SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫",
        help_text="–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤"
    )

    meta_description = models.TextField(
        blank=True,
        max_length=160,
        verbose_name="SEO –æ–ø–∏—Å–∞–Ω–∏–µ",
        help_text="–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤ (–¥–æ 160 —Å–∏–º–≤–æ–ª–æ–≤)"
    )

    # üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
    display_order = models.IntegerField(
        default=0,
        verbose_name="–ü–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏",
        help_text="–ú–µ–Ω—å—à–µ —á–∏—Å–ª–æ = –≤—ã—à–µ –≤ —Å–ø–∏—Å–∫–µ"
    )

    is_active = models.BooleanField(
        default=True,
        verbose_name="–ê–∫—Ç–∏–≤–Ω–∞",
        help_text="–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∞ —Å–∞–π—Ç–µ"
    )

    def save(self, *args, **kwargs):
        """üíæ –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è slug –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏"""
        if not self.slug:
            self.slug = slugify(self.category_name)
        super().save(*args, **kwargs)

    def get_absolute_url(self):
        """üåê URL –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ - –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –º–æ–¥–µ–ª—è—Ö"""
        raise NotImplementedError("–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ get_absolute_url –≤ –¥–æ—á–µ—Ä–Ω–µ–π –º–æ–¥–µ–ª–∏")

    class Meta:
        abstract = True  # ‚úÖ –ù–µ —Å–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É!
        ordering = ['display_order', 'category_name']


class BaseProduct(BaseModel):
    """
    üîß –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω–∞—è –º–æ–¥–µ–ª—å —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –∏ –ª–æ–¥–æ–∫

    –°–æ–¥–µ—Ä–∂–∏—Ç –í–°–ï –æ–±—â–∏–µ –ø–æ–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –ª—é–±–æ–≥–æ —Ç–∏–ø–∞
    """
    # üè∑Ô∏è –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    product_name = models.CharField(
        max_length=200,
        verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞",
        help_text="–ü–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"
    )

    slug = models.SlugField(
        unique=True,
        max_length=255,
        verbose_name="URL-–∞–¥—Ä–µ—Å",
        help_text="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"
    )

    # üí∞ –¶–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
    price = models.IntegerField(
        verbose_name="–ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞",
        null=True,
        blank=True,
        default=0,
        help_text="–¶–µ–Ω–∞ –≤ —Ä—É–±–ª—è—Ö (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ)"
    )

    # üìù –ö–æ–Ω—Ç–µ–Ω—Ç
    product_desription = CKEditor5Field(
        verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞",
        help_text="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º",
        config_name='default'
    )

    # üÜî –ê—Ä—Ç–∏–∫—É–ª –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    product_sku = models.CharField(
        max_length=50,
        unique=True,
        null=True,
        blank=True,
        verbose_name="–ê—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä–∞",
        help_text="–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –∏ —É—á–µ—Ç–∞"
    )

    newest_product = models.BooleanField(
        default=False,
        verbose_name="–ù–æ–≤—ã–π —Ç–æ–≤–∞—Ä",
        help_text="–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ –Ω–æ–≤–∏–Ω–æ–∫"
    )

    # üìà SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è  
    page_title = models.CharField(
        max_length=200,
        blank=True,
        verbose_name="SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫",
        help_text="–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤"
    )

    meta_description = models.TextField(
        blank=True,
        max_length=160,
        verbose_name="SEO –æ–ø–∏—Å–∞–Ω–∏–µ",
        help_text="–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤"
    )

    def save(self, *args, **kwargs):
        """üíæ –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è slug –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏"""
        if not self.slug:
            self.slug = slugify(self.product_name)
        super().save(*args, **kwargs)

    def get_absolute_url(self):
        """üåê URL —Ç–æ–≤–∞—Ä–∞ - –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –º–æ–¥–µ–ª—è—Ö"""
        raise NotImplementedError("–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ get_absolute_url –≤ –¥–æ—á–µ—Ä–Ω–µ–π –º–æ–¥–µ–ª–∏")

    def get_main_image(self):
        """üñºÔ∏è –ü–æ–ª—É—á–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è - –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –º–æ–¥–µ–ª—è—Ö"""
        raise NotImplementedError("–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ get_main_image –≤ –¥–æ—á–µ—Ä–Ω–µ–π –º–æ–¥–µ–ª–∏")

    def get_all_images(self):
        """üñºÔ∏è –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ - –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –º–æ–¥–µ–ª—è—Ö"""
        raise NotImplementedError("–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ get_all_images –≤ –¥–æ—á–µ—Ä–Ω–µ–π –º–æ–¥–µ–ª–∏")

    class Meta:
        abstract = True  # ‚úÖ –ù–µ —Å–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É!
        ordering = ['-newest_product', 'product_name']

# üéØ –†–ï–ó–£–õ–¨–¢–ê–¢:
#
# ‚úÖ BaseModel - –æ–±—â–∏–µ –ø–æ–ª—è –¥–ª—è –í–°–ï–• –º–æ–¥–µ–ª–µ–π:
# - uid (UUID primary key)
# - created_at, updated_at (–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏)
#
# ‚úÖ BaseCategory - –æ–±—â–∏–µ –ø–æ–ª—è –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π:
# - category_name, slug (–æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è)
# - page_title, meta_description (SEO)
# - display_order, is_active (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ)
# - –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è slug
#
# ‚úÖ BaseProduct - –æ–±—â–∏–µ –ø–æ–ª—è –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤:
# - product_name, slug (–æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è)
# - price (—Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ)
# - product_desription (CKEditor5)
# - product_sku, newest_product (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ)
# - page_title, meta_description (SEO)
# - –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è slug
# - –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ URL
#
# üîß –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
# products/models.py: class Product(BaseProduct)
# boats/models.py: class BoatProduct(BaseProduct)
# products/models.py: class Category(BaseCategory)
# boats/models.py: class BoatCategory(BaseCategory)