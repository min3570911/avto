# üìÅ boats/models.py - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
# üõ•Ô∏è Proxy-–º–æ–¥–µ–ª–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ª–æ–¥–∫–∞–º–∏
# üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–ª–∞—Å—Å–æ–≤ –∏ –∏–º–ø–æ—Ä—Ç—ã

from django.db import models
from products.models import Product, Category  # ‚ö†Ô∏è –í–†–ï–ú–ï–ù–ù–û: –ø–æ–∫–∞ –µ—Å—Ç—å products, –ø–æ—Ç–æ–º –∑–∞–º–µ–Ω–∏–º –Ω–∞ references

# --- –ú–µ–Ω–µ–¥–∂–µ—Ä—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ ---

class BoatCategoryManager(models.Manager):
    """
    üõ•Ô∏è –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ª–æ–¥–æ–∫.
    """
    def get_queryset(self):
        return super().get_queryset().filter(category_type='boats')

class BoatProductManager(models.Manager):
    """
    üõ•Ô∏è –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤-–ª–æ–¥–æ–∫.
    """
    def get_queryset(self):
        # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –ª–æ–¥–æ–∫
        return super().get_queryset().filter(category__category_type='boats')

# --- Proxy-–º–æ–¥–µ–ª–∏ ---

class BoatCategory(Category):
    """
    üõ•Ô∏è Proxy-–º–æ–¥–µ–ª—å –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ª–æ–¥–æ–∫.
    –ù–µ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É –≤ –ë–î, –∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –º–æ–¥–µ–ª–∏ Category, –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ —Ç–∏–ø—É 'boats'.
    """
    objects = BoatCategoryManager()

    def save(self, *args, **kwargs):
        """üîí –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∏–ø 'boats' –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏"""
        self.category_type = 'boats'
        super().save(*args, **kwargs)

    class Meta:
        proxy = True
        verbose_name = 'üõ•Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è –ª–æ–¥–æ–∫'
        verbose_name_plural = 'üõ•Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ª–æ–¥–æ–∫'

class BoatProduct(Product):
    """
    üõ•Ô∏è Proxy-–º–æ–¥–µ–ª—å –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤-–ª–æ–¥–æ–∫.
    –ù–µ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É –≤ –ë–î, –∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –º–æ–¥–µ–ª–∏ Product, –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–ª—è –ª–æ–¥–æ–∫.
    """
    objects = BoatProductManager()

    def save(self, *args, **kwargs):
        """
        üîí –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–≤–∞—Ä –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ª–æ–¥–æ–∫ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏
        """
        if self.category and self.category.category_type != 'boats':
            raise ValueError("–¢–æ–≤–∞—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω —Ç–æ–ª—å–∫–æ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ª–æ–¥–æ–∫")
        super().save(*args, **kwargs)

    def get_boat_dimensions(self):
        """
        üõ•Ô∏è –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –ª–æ–¥–æ—á–Ω–æ–≥–æ –∫–æ–≤—Ä–∏–∫–∞
        –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ª–æ–¥–æ–∫
        """
        if self.boat_mat_length and self.boat_mat_width:
            return f"{self.boat_mat_length}√ó{self.boat_mat_width} —Å–º"
        elif self.boat_mat_length:
            return f"–î–ª–∏–Ω–∞: {self.boat_mat_length} —Å–º"
        elif self.boat_mat_width:
            return f"–®–∏—Ä–∏–Ω–∞: {self.boat_mat_width} —Å–º"
        return None

    class Meta:
        proxy = True
        verbose_name = 'üõ•Ô∏è –¢–æ–≤–∞—Ä (–ª–æ–¥–∫–∞)'
        verbose_name_plural = 'üõ•Ô∏è –¢–æ–≤–∞—Ä—ã (–ª–æ–¥–∫–∏)'