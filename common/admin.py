# üìÅ common/admin.py
# üë®‚Äçüíº –ê–¥–º–∏–Ω–∫–∞ —Å —Å–∏—Å—Ç–µ–º–æ–π –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–æ–≤ –∏ —É–ª—É—á—à–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
# üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç django.utils.timezone

from django.contrib import admin
from django.utils.html import format_html
from django.contrib.contenttypes.models import ContentType
from django.urls import reverse
from django.utils.safestring import mark_safe
from django.utils import timezone  # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–π –∏–º–ø–æ—Ä—Ç
from .models import ProductReview, Wishlist


def approve_reviews(modeladmin, request, queryset):
    """‚úÖ –ú–∞—Å—Å–æ–≤–æ–µ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤"""
    updated = queryset.update(is_approved=True)
    modeladmin.message_user(request, f'–û–¥–æ–±—Ä–µ–Ω–æ {updated} –æ—Ç–∑—ã–≤–æ–≤.')


approve_reviews.short_description = "‚úÖ –û–¥–æ–±—Ä–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã"


def reject_reviews(modeladmin, request, queryset):
    """‚ùå –ú–∞—Å—Å–æ–≤–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤"""
    updated = queryset.update(is_approved=False)
    modeladmin.message_user(request, f'–û—Ç–∫–ª–æ–Ω–µ–Ω–æ {updated} –æ—Ç–∑—ã–≤–æ–≤.')


reject_reviews.short_description = "‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã"


@admin.register(ProductReview)
class ProductReviewAdmin(admin.ModelAdmin):
    """üìù –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤ —Å –º–æ–¥–µ—Ä–∞—Ü–∏–µ–π"""

    list_display = (
        'get_approval_status',
        'get_user_info',
        'get_product_info',
        'get_rating_stars',
        'get_likes_dislikes',
        'date_added'
    )

    list_filter = (
        'is_approved',
        'stars',
        'date_added',
        'content_type'
    )

    search_fields = (
        'reviewer_name',
        'reviewer_email',
        'content'
    )

    readonly_fields = (
        'content_type',
        'object_id',
        'user',
        'reviewer_name',
        'reviewer_email',
        'date_added',
        'get_product_link',
        'get_likes_dislikes',
        'get_rating_stars'
    )

    ordering = ('-date_added',)
    date_hierarchy = 'date_added'

    actions = [approve_reviews, reject_reviews]

    fieldsets = (
        ('üìù –û—Ç–∑—ã–≤', {
            'fields': ('reviewer_name', 'reviewer_email', 'get_product_link', 'stars', 'get_rating_stars', 'content')
        }),
        ('‚úÖ –ú–æ–¥–µ—Ä–∞—Ü–∏—è', {
            'fields': ('is_approved',),
            'description': '–¢–æ–ª—å–∫–æ –æ–¥–æ–±—Ä–µ–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã –≤–∏–¥—è—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏'
        }),
        ('üëçüëé –†–µ–∞–∫—Ü–∏–∏', {
            'fields': ('get_likes_dislikes',),
            'classes': ('collapse',)
        }),
        ('üîó –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('content_type', 'object_id', 'date_added'),
            'classes': ('collapse',)
        }),
    )

    def get_approval_status(self, obj):
        """‚úÖ –°—Ç–∞—Ç—É—Å –º–æ–¥–µ—Ä–∞—Ü–∏–∏ —Å —Ü–≤–µ—Ç–æ–≤–æ–π –∏–Ω–¥–∏–∫–∞—Ü–∏–µ–π"""
        if obj.is_approved:
            return format_html(
                '<span style="color: green; font-weight: bold;">‚úÖ –û–¥–æ–±—Ä–µ–Ω</span>'
            )
        else:
            return format_html(
                '<span style="color: red; font-weight: bold;">‚è≥ –ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏</span>'
            )

    get_approval_status.short_description = "–°—Ç–∞—Ç—É—Å"
    get_approval_status.admin_order_field = 'is_approved'

    def get_user_info(self, obj):
        """üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ—Ä–µ –æ—Ç–∑—ã–≤–∞"""
        # –î–ª—è –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º reviewer_name –∏ reviewer_email
        if obj.reviewer_name:
            email_display = obj.reviewer_email if hasattr(obj, 'reviewer_email') and obj.reviewer_email else 'Email –Ω–µ —É–∫–∞–∑–∞–Ω'
            return format_html(
                '<strong>{}</strong><br><small>{}</small>',
                obj.reviewer_name,
                email_display
            )
        # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å–æ —Å—Ç–∞—Ä—ã–º–∏ –æ—Ç–∑—ã–≤–∞–º–∏)
        elif obj.user:
            return format_html(
                '<strong>{}</strong><br><small>{}</small>',
                obj.user.username,
                obj.user.email or '–ù–µ—Ç email'
            )
        return "‚ùå –ê–≤—Ç–æ—Ä –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω"

    get_user_info.short_description = "–ê–≤—Ç–æ—Ä –æ—Ç–∑—ã–≤–∞"

    def get_product_info(self, obj):
        """üì¶ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ"""
        if obj.product:
            # üîç –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –∏–∫–æ–Ω–∫–∏
            if hasattr(obj.product, 'is_boat_product') and obj.product.is_boat_product():
                icon = "üõ•Ô∏è"
                product_type = "–õ–æ–¥–∫–∞"
            else:
                icon = "üöó"
                product_type = "–ê–≤—Ç–æ–º–æ–±–∏–ª—å"

            return format_html(
                '{} <strong>{}</strong><br><small>{}</small>',
                icon,
                obj.product.product_name,
                product_type
            )
        return "‚ùå –¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω"

    get_product_info.short_description = "–¢–æ–≤–∞—Ä"

    def get_product_link(self, obj):
        """üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä"""
        if obj.product:
            return format_html(
                '<a href="{}" target="_blank">{}</a>',
                f'/admin/{obj.content_type.app_label}/{obj.content_type.model}/{obj.object_id}/change/',
                f'{obj.product.product_name} (–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å)'
            )
        return "‚ùå –¢–æ–≤–∞—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

    get_product_link.short_description = "–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä"

    def get_rating_stars(self, obj):
        """‚≠ê –í–∏–∑—É–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥"""
        stars = "‚≠ê" * obj.stars + "‚òÜ" * (5 - obj.stars)
        return format_html('<span style="font-size: 16px;">{}</span>', stars)

    get_rating_stars.short_description = "–†–µ–π—Ç–∏–Ω–≥"
    get_rating_stars.admin_order_field = 'stars'

    def get_likes_dislikes(self, obj):
        """üëçüëé –õ–∞–π–∫–∏ –∏ –¥–∏–∑–ª–∞–π–∫–∏"""
        likes_count = obj.like_count()
        dislikes_count = obj.dislike_count()

        return format_html(
            '<span style="color: green;">üëç {}</span> / <span style="color: red;">üëé {}</span>',
            likes_count,
            dislikes_count
        )

    get_likes_dislikes.short_description = "–õ–∞–π–∫–∏ / –î–∏–∑–ª–∞–π–∫–∏"

    def has_add_permission(self, request):
        """üö´ –ó–∞–ø—Ä–µ—Ç–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É"""
        return False

    def has_change_permission(self, request, obj=None):
        """‚úèÔ∏è –†–∞–∑—Ä–µ—à–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏"""
        return True

    def has_delete_permission(self, request, obj=None):
        """üóëÔ∏è –†–∞–∑—Ä–µ—à–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤"""
        return True


@admin.register(Wishlist)
class WishlistAdmin(admin.ModelAdmin):
    """‚ù§Ô∏è –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ"""

    list_display = (
        'get_user_info',
        'get_product_info',
        'get_configuration',
        'added_on'
    )

    list_filter = (
        'added_on',
        'content_type',
        'has_podpyatnik'
    )

    search_fields = (
        'user__username',
        'user__email'
    )

    readonly_fields = (
        'user',
        'content_type',
        'object_id',
        'added_on',
        'get_product_link',
        'get_configuration_details'
    )

    ordering = ('-added_on',)
    date_hierarchy = 'added_on'

    fieldsets = (
        ('‚ù§Ô∏è –ò–∑–±—Ä–∞–Ω–Ω–æ–µ', {
            'fields': ('user', 'get_product_link', 'added_on')
        }),
        ('üé® –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è', {
            'fields': ('get_configuration_details', 'kit_variant', 'carpet_color', 'border_color', 'has_podpyatnik')
        }),
        ('üîó –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('content_type', 'object_id'),
            'classes': ('collapse',)
        }),
    )

    def get_user_info(self, obj):
        """üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
        if obj.user:
            return format_html(
                '<strong>{}</strong><br><small>{}</small>',
                obj.user.username,
                obj.user.email or '–ù–µ—Ç email'
            )
        return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω"

    get_user_info.short_description = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"

    def get_product_info(self, obj):
        """üì¶ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ"""
        if obj.product:
            # üîç –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –∏–∫–æ–Ω–∫–∏
            if hasattr(obj.product, 'is_boat_product') and obj.product.is_boat_product():
                icon = "üõ•Ô∏è"
                product_type = "–õ–æ–¥–∫–∞"
            else:
                icon = "üöó"
                product_type = "–ê–≤—Ç–æ–º–æ–±–∏–ª—å"

            return format_html(
                '{} <strong>{}</strong><br><small>{}</small>',
                icon,
                obj.product.product_name,
                product_type
            )
        return "‚ùå –¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω"

    get_product_info.short_description = "–¢–æ–≤–∞—Ä"

    def get_product_link(self, obj):
        """üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä"""
        if obj.product:
            return format_html(
                '<a href="{}" target="_blank">{}</a>',
                f'/admin/{obj.content_type.app_label}/{obj.content_type.model}/{obj.object_id}/change/',
                f'{obj.product.product_name} (–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å)'
            )
        return "‚ùå –¢–æ–≤–∞—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

    get_product_link.short_description = "–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä"

    def get_configuration(self, obj):
        """üé® –ö—Ä–∞—Ç–∫–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è"""
        parts = []

        if obj.kit_variant:
            parts.append(f"üì¶ {obj.kit_variant.name}")

        if obj.carpet_color:
            parts.append(f"üé® {obj.carpet_color.name}")

        if obj.border_color:
            parts.append(f"üî≤ {obj.border_color.name}")

        if obj.has_podpyatnik:
            parts.append("üë£ –ü–æ–¥–ø—è—Ç–Ω–∏–∫")

        return format_html('<br>'.join(parts)) if parts else "üîß –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è"

    get_configuration.short_description = "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è"

    def get_configuration_details(self, obj):
        """üîß –ü–æ–¥—Ä–æ–±–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è"""
        details = []

        if obj.kit_variant:
            details.append(f"–ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è: {obj.kit_variant.name}")
        else:
            details.append("–ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è (–¥–ª—è –ª–æ–¥–æ–∫)")

        if obj.carpet_color:
            details.append(f"–¶–≤–µ—Ç –∫–æ–≤—Ä–∏–∫–∞: {obj.carpet_color.name}")
        else:
            details.append("–¶–≤–µ—Ç –∫–æ–≤—Ä–∏–∫–∞: –ù–µ –≤—ã–±—Ä–∞–Ω")

        if obj.border_color:
            details.append(f"–¶–≤–µ—Ç –æ–∫–∞–Ω—Ç–æ–≤–∫–∏: {obj.border_color.name}")
        else:
            details.append("–¶–≤–µ—Ç –æ–∫–∞–Ω—Ç–æ–≤–∫–∏: –ù–µ –≤—ã–±—Ä–∞–Ω")

        details.append(f"–ü–æ–¥–ø—è—Ç–Ω–∏–∫: {'–î–∞' if obj.has_podpyatnik else '–ù–µ—Ç'}")

        return format_html('<br>'.join(details))

    get_configuration_details.short_description = "–î–µ—Ç–∞–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"

    def has_add_permission(self, request):
        """üö´ –ó–∞–ø—Ä–µ—Ç–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É"""
        return False

    def has_change_permission(self, request, obj=None):
        """‚úèÔ∏è –†–∞–∑—Ä–µ—à–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å–º–æ—Ç—Ä"""
        return True

    def has_delete_permission(self, request, obj=None):
        """üóëÔ∏è –†–∞–∑—Ä–µ—à–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ"""
        return True


# üîß –ö–õ–Æ–ß–ï–í–´–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø –í –≠–¢–û–ú –§–ê–ô–õ–ï:
#
# ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û:
# - –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç `from django.utils import timezone`
# - –≠—Ç–æ—Ç –∏–º–ø–æ—Ä—Ç –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –¥–∞—Ç–∞–º
# - –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é
#
# ‚úÖ –°–û–•–†–ê–ù–ï–ù–û –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô:
# - –í—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –ª–æ–≥–∏–∫–∞ –∞–¥–º–∏–Ω–æ–∫
# - –í—Å–µ –º–µ—Ç–æ–¥—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
# - –°–∏—Å—Ç–µ–º–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–æ–≤
# - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–ª–µ–π –∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
# - –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞
#
# üéØ –†–ï–ó–£–õ–¨–¢–ê–¢:
# - –£—Å—Ç—Ä–∞–Ω–µ–Ω–∞ –æ—à–∏–±–∫–∞ "Unresolved reference 'timezone'"
# - –û–±–µ—Å–ø–µ—á–µ–Ω–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –¥–ª—è –±—É–¥—É—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π —Å –¥–∞—Ç–∞–º–∏
# - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –ø–æ–ª–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∞–¥–º–∏–Ω–∫–∏
# - –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é timezone.now() –≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ö –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ