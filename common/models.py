# üìÅ common/models.py - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
# ‚úÖ –§–ò–ö–°: –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –∏ Generic FK –¥–ª—è UUID primary keys
# üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –í—Å–µ –æ—à–∏–±–∫–∏ –∏–º–ø–æ—Ä—Ç–æ–≤ –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π –ø–æ–ª–µ–π

from django.db import models
from django.contrib.auth.models import User
from django.contrib.contenttypes.models import ContentType
from django.contrib.contenttypes.fields import GenericForeignKey  # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç
from base.models import BaseModel

# ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –¥–æ–±–∞–≤–∏–º –∏–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–µ–π –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
from products.models import Color, KitVariant


class ProductReview(BaseModel):
    """üìù –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã –¥–ª—è –ª—é–±—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤"""

    # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: Generic FK –¥–ª—è UUID primary keys
    content_type = models.ForeignKey(ContentType, on_delete=models.CASCADE)
    object_id = models.UUIDField()  # ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: –¥–ª—è UUID primary keys
    product = GenericForeignKey('content_type', 'object_id')

    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name='reviews')
    stars = models.IntegerField(choices=[(i, i) for i in range(1, 6)])
    content = models.TextField()
    date_added = models.DateTimeField(auto_now_add=True)

    likes = models.ManyToManyField(User, related_name="liked_reviews", blank=True)
    dislikes = models.ManyToManyField(User, related_name="disliked_reviews", blank=True)

    def like_count(self):
        """üëç –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤"""
        return self.likes.count()

    def dislike_count(self):
        """üëé –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∏–∑–ª–∞–π–∫–æ–≤"""
        return self.dislikes.count()

    def __str__(self):
        return f"–û—Ç–∑—ã–≤ –æ—Ç {self.user.username} –Ω–∞ {self.product} ({self.stars}‚≠ê)"

    class Meta:
        verbose_name = "–û—Ç–∑—ã–≤"
        verbose_name_plural = "–û—Ç–∑—ã–≤—ã"
        ordering = ['-date_added']
        db_table = 'products_productreview'
        indexes = [
            models.Index(fields=["content_type", "object_id"]),
        ]


class Wishlist(BaseModel):
    """‚ù§Ô∏è –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤"""
    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name="wishlist")

    # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: Generic FK –¥–ª—è —Å–≤—è–∑–∏ —Å –ª—é–±—ã–º —Ç–æ–≤–∞—Ä–æ–º (Product, BoatProduct, etc.)
    content_type = models.ForeignKey(ContentType, on_delete=models.CASCADE)
    object_id = models.UUIDField()  # ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: –¥–ª—è UUID primary keys
    product = GenericForeignKey('content_type', 'object_id')

    # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ª—è –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∏–º–ø–æ—Ä—Ç–∞–º–∏
    # KitVariant –æ—Å—Ç–∞—ë—Ç—Å—è –≤ 'products', —Ç.–∫. —ç—Ç–æ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–∞—è –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –æ–ø—Ü–∏—è
    kit_variant = models.ForeignKey(
        KitVariant,  # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å
        on_delete=models.SET_NULL,
        null=True, blank=True,
        related_name="wishlist_items"
    )
    carpet_color = models.ForeignKey(
        Color,  # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å
        on_delete=models.SET_NULL,
        null=True, blank=True,
        related_name="wishlist_carpet_items"
    )
    border_color = models.ForeignKey(
        Color,  # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å
        on_delete=models.SET_NULL,
        null=True, blank=True,
        related_name="wishlist_border_items"
    )
    has_podpyatnik = models.BooleanField(default=False)
    added_on = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"‚ù§Ô∏è {self.user.username} ‚Üí {self.product}"

    class Meta:
        verbose_name = "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ"
        verbose_name_plural = "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ"
        ordering = ['-added_on']
        db_table = 'products_wishlist'  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è —Å—Ç–∞—Ä–æ–π —Ç–∞–±–ª–∏—Ü—ã
        # –ò–Ω–¥–µ–∫—Å –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ —Ç–æ–≤–∞—Ä—É
        indexes = [
            models.Index(fields=["content_type", "object_id"]),
            models.Index(fields=["user"]),
        ]


# üîß –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û: –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
class ProductReviewAdmin:
    """üë®‚Äçüíº –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤"""

    def __str__(self):
        """üîç –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∫–∏"""
        return f"ProductReview(user={self.user}, product={self.product})"