# üìÅ common/views.py - –ü–û–õ–ù–ê–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
# ‚úÖ –§–ò–ö–°: –ó–∞–≤–µ—Ä—à–µ–Ω–∞ –Ω–µ–¥–æ–ø–∏—Å–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è add_to_wishlist
# üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∏–º–ø–æ—Ä—Ç—ã ContentType

from django.shortcuts import render, redirect, get_object_or_404
from django.contrib.auth.decorators import login_required
from django.contrib import messages
from django.views.generic import ListView
from django.contrib.auth.mixins import LoginRequiredMixin
from django.http import JsonResponse
from django.views.decorators.http import require_POST
from django.views.decorators.csrf import csrf_exempt
from django.contrib.contenttypes.models import ContentType  # ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–π –∏–º–ø–æ—Ä—Ç
import json

from .models import ProductReview, Wishlist


class ReviewListView(ListView):
    """üìù –°–ø–∏—Å–æ–∫ –æ—Ç–∑—ã–≤–æ–≤ (–ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)"""
    model = ProductReview
    template_name = 'common/reviews.html'
    context_object_name = 'reviews'
    paginate_by = 10

    def get_queryset(self):
        """üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π"""
        return ProductReview.objects.select_related('user').prefetch_related(
            'likes', 'dislikes'
        ).order_by('-date_added')


class WishlistView(LoginRequiredMixin, ListView):
    """‚ù§Ô∏è –°–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)"""
    model = Wishlist
    template_name = 'common/wishlist.html'
    context_object_name = 'wishlist_items'

    def get_queryset(self):
        """üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        return Wishlist.objects.filter(
            user=self.request.user
        ).select_related(
            'kit_variant', 'carpet_color', 'border_color'
        ).order_by('-added_on')


@require_POST
@login_required
def add_to_wishlist(request):
    """‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ (AJAX) - –ò–°–ü–†–ê–í–õ–ï–ù–û: –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        data = json.loads(request.body)
        content_type_id = data.get('content_type')
        object_id = data.get('object_id')

        # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ó–∞–≤–µ—Ä—à–∞–µ–º –æ–±–æ—Ä–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É
        # –ë—ã–ª–æ: wishlist_item, created = Wishlist.obje
        wishlist_item, created = Wishlist.objects.get_or_create(
            user=request.user,
            content_type_id=content_type_id,
            object_id=object_id,
            defaults={
                'kit_variant_id': data.get('kit_variant'),
                'carpet_color_id': data.get('carpet_color'),
                'border_color_id': data.get('border_color'),
                'has_podpyatnik': data.get('has_podpyatnik', False),
            }
        )

        if created:
            return JsonResponse({
                'success': True,
                'message': '‚ù§Ô∏è –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ',
                'in_wishlist': True
            })
        else:
            return JsonResponse({
                'success': False,
                'message': '‚ö†Ô∏è –¢–æ–≤–∞—Ä —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º',
                'in_wishlist': True
            })

    except Exception as e:
        return JsonResponse({
            'success': False,
            'message': f'‚ùå –û—à–∏–±–∫–∞: {str(e)}'
        })


@require_POST
@login_required
def remove_from_wishlist(request):
    """‚ûñ –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ (AJAX)"""
    try:
        data = json.loads(request.body)
        content_type_id = data.get('content_type')
        object_id = data.get('object_id')

        wishlist_item = get_object_or_404(
            Wishlist,
            user=request.user,
            content_type_id=content_type_id,
            object_id=object_id
        )

        wishlist_item.delete()

        return JsonResponse({
            'success': True,
            'message': 'üóëÔ∏è –¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ',
            'in_wishlist': False
        })

    except Exception as e:
        return JsonResponse({
            'success': False,
            'message': f'‚ùå –û—à–∏–±–∫–∞: {str(e)}'
        })


@require_POST
@login_required
def add_review(request):
    """üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞ (AJAX)"""
    try:
        data = json.loads(request.body)
        content_type_id = data.get('content_type')
        object_id = data.get('object_id')
        stars = int(data.get('stars', 5))
        content = data.get('content', '').strip()

        # ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Å—Ç–∞–≤–ª—è–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –æ—Ç–∑—ã–≤
        existing_review = ProductReview.objects.filter(
            user=request.user,
            content_type_id=content_type_id,
            object_id=object_id
        ).first()

        if existing_review:
            return JsonResponse({
                'success': False,
                'message': '‚ö†Ô∏è –í—ã —É–∂–µ –æ—Å—Ç–∞–≤–ª—è–ª–∏ –æ—Ç–∑—ã–≤ –Ω–∞ —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä'
            })

        # ‚úÖ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤
        review = ProductReview.objects.create(
            user=request.user,
            content_type_id=content_type_id,
            object_id=object_id,
            stars=stars,
            content=content
        )

        return JsonResponse({
            'success': True,
            'message': '‚úÖ –û—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω',
            'review_id': str(review.uid)
        })

    except Exception as e:
        return JsonResponse({
            'success': False,
            'message': f'‚ùå –û—à–∏–±–∫–∞: {str(e)}'
        })


# üîß –°–õ–£–ñ–ï–ë–ù–´–ï –§–£–ù–ö–¶–ò–ò

def get_user_wishlist_status(user, content_type_id, object_id):
    """‚ù§Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —Ç–æ–≤–∞—Ä –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if not user.is_authenticated:
        return False

    return Wishlist.objects.filter(
        user=user,
        content_type_id=content_type_id,
        object_id=object_id
    ).exists()


def get_user_review_status(user, content_type_id, object_id):
    """üìù –ü—Ä–æ–≤–µ—Ä–∫–∞, –æ—Å—Ç–∞–≤–ª—è–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∑—ã–≤"""
    if not user.is_authenticated:
        return False

    return ProductReview.objects.filter(
        user=user,
        content_type_id=content_type_id,
        object_id=object_id
    ).exists()


# üîß –ö–õ–Æ–ß–ï–í–´–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:
#
# ‚úÖ –ó–ê–í–ï–†–®–ï–ù–û: add_to_wishlist - –±—ã–ª–∞ –æ–±–æ—Ä–≤–∞–Ω–∞ –Ω–∞ "Wishlist.obje"
# ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –∏–º–ø–æ—Ä—Ç ContentType –¥–ª—è AJAX —Ñ—É–Ω–∫—Ü–∏–π
# ‚úÖ –°–û–•–†–ê–ù–ï–ù–û: –≤—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –ª–æ–≥–∏–∫–∞ –∏ —Å—Ç–∏–ª—å –∫–æ–¥–∞
# ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: get_or_create —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ parameters
# ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–æ–ª–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
# ‚úÖ –°–û–•–†–ê–ù–ï–ù–û: –≤—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ —ç–º–æ–¥–∑–∏ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º —Å—Ç–∏–ª–µ
#
# üéØ –†–ï–ó–£–õ–¨–¢–ê–¢:
# - –§—É–Ω–∫—Ü–∏—è add_to_wishlist —Ç–µ–ø–µ—Ä—å –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—á–∞—è
# - –í—Å–µ AJAX –∑–∞–ø—Ä–æ—Å—ã –±—É–¥—É—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è
# - –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π frontend –∫–æ–¥ –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
# - –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é