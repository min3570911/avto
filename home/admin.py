# üìÅ home/admin.py - –û–ë–ù–û–í–õ–ï–ù–û —Å –∞–¥–º–∏–Ω–∫–æ–π –¥–ª—è HeroSection
# üÜï –î–û–ë–ê–í–õ–ï–ù–û: –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è HeroSection –∏ HeroAdvantage
# ‚úÖ –°–û–•–†–ê–ù–ï–ù–û: –í—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∞–¥–º–∏–Ω–∫–∏ (FAQ, Banner, Testimonial, ContactInfo)

from django.contrib import admin
from django.utils.html import format_html
from .models import ContactInfo, FAQ, Banner, Testimonial, HeroSection, HeroAdvantage


# üÜï –ù–û–í–û–ï: –ò–Ω–ª–∞–π–Ω –∞–¥–º–∏–Ω–∫–∞ –¥–ª—è –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ hero-—Å–µ–∫—Ü–∏–∏
class HeroAdvantageInline(admin.TabularInline):
    """üéØ –ò–Ω–ª–∞–π–Ω –∞–¥–º–∏–Ω–∫–∞ –¥–ª—è –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ hero-—Å–µ–∫—Ü–∏–∏"""
    model = HeroAdvantage
    extra = 1
    fields = ('icon_file', 'get_icon_preview', 'icon', 'title', 'description', 'order')
    readonly_fields = ('get_icon_preview',)
    ordering = ('order',)

    def get_icon_preview(self, obj):
        """üëÅÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∏–∫–æ–Ω–∫–∏"""
        if obj.icon_file:
            return format_html(
                '<img src="{}" style="width: 30px; height: 30px; object-fit: contain;" title="{}">',
                obj.icon_file.url,
                obj.title
            )
        elif obj.icon:
            return format_html('<span style="font-size: 24px;">{}</span>', obj.icon)
        return "‚ùå –ù–µ—Ç –∏–∫–æ–Ω–∫–∏"

    get_icon_preview.short_description = "–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä"


# üÜï –ù–û–í–û–ï: –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è hero-—Å–µ–∫—Ü–∏–∏
@admin.register(HeroSection)
class HeroSectionAdmin(admin.ModelAdmin):
    """üé¨ –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è hero-—Å–µ–∫—Ü–∏–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    list_display = ('title', 'get_video_info', 'get_advantages_count', 'is_active', 'created_at')
    list_filter = ('is_active', 'created_at')
    search_fields = ('title', 'subtitle')
    readonly_fields = ('created_at', 'updated_at', 'get_video_preview')
    inlines = [HeroAdvantageInline]

    fieldsets = (
        ('üé¨ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ hero-—Å–µ–∫—Ü–∏–∏', {
            'fields': ('title', 'subtitle')
        }),
        ('üé• –ú–µ–¥–∏–∞ –∫–æ–Ω—Ç–µ–Ω—Ç', {
            'fields': ('video', 'get_video_preview', 'fallback_image'),
            'description': '–§–æ–Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ-–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è hero-–±–ª–æ–∫–∞'
        }),
        ('üéØ –ö–Ω–æ–ø–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è', {
            'fields': ('button_text', 'button_link'),
            'classes': ('collapse',)
        }),
        ('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('is_active',)
        }),
        ('üìÖ –°–ª—É–∂–µ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'updated_at'),
            'classes': ('collapse',)
        }),
    )

    def get_video_info(self, obj):
        """üé• –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∏–¥–µ–æ —Ñ–∞–π–ª–µ"""
        if obj.video:
            try:
                file_size = obj.video.size / (1024 * 1024)  # –†–∞–∑–º–µ—Ä –≤ MB
                return format_html(
                    '<span style="color: #28a745;">üìπ {:.1f} MB</span>',
                    file_size
                )
            except:
                return "üìπ –í–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ"
        return format_html('<span style="color: #dc3545;">‚ùå –í–∏–¥–µ–æ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ</span>')

    get_video_info.short_description = "–í–∏–¥–µ–æ"

    def get_video_preview(self, obj):
        """üëÅÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≤–∏–¥–µ–æ"""
        if obj.video:
            return format_html(
                '<video width="300" height="200" controls style="border-radius: 8px;">'
                '<source src="{}" type="video/mp4">'
                '–í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ.'
                '</video>',
                obj.video.url
            )
        return "üé• –í–∏–¥–µ–æ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ"

    get_video_preview.short_description = "–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≤–∏–¥–µ–æ"

    def get_advantages_count(self, obj):
        """üéØ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤"""
        count = obj.advantages.count()
        if count == 0:
            return format_html('<span style="color: #dc3545;">‚ùå –ù–µ—Ç –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤</span>')
        elif count < 4:
            return format_html('<span style="color: #ffc107;">‚ö†Ô∏è {} –∏–∑ 4</span>', count)
        else:
            return format_html('<span style="color: #28a745;">‚úÖ {} –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤</span>', count)

    get_advantages_count.short_description = "–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞"

    def has_add_permission(self, request):
        """üö´ –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ hero-—Å–µ–∫—Ü–∏–π –¥–æ 3"""
        if HeroSection.objects.count() >= 3:
            return False
        return super().has_add_permission(request)


# ‚úÖ –°–£–©–ï–°–¢–í–£–Æ–©–ò–ï –ê–î–ú–ò–ù–ö–ò (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

@admin.register(ContactInfo)
class ContactInfoAdmin(admin.ModelAdmin):
    """üìû –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""
    list_display = ('phone', 'email', 'working_hours', 'is_active', 'created_at')
    list_filter = ('is_active', 'created_at')
    search_fields = ('phone', 'email', 'address')
    readonly_fields = ('created_at', 'updated_at')

    fieldsets = (
        ('üìû –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã', {
            'fields': ('phone', 'email', 'address', 'working_hours')
        }),
        ('üåê –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏', {
            'fields': ('telegram', 'instagram', 'facebook'),
            'classes': ('collapse',)
        }),
        ('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('is_active',)
        }),
        ('üìÖ –°–ª—É–∂–µ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'updated_at'),
            'classes': ('collapse',)
        }),
    )

    def has_add_permission(self, request):
        """üö´ –†–∞–∑—Ä–µ—à–∞–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –∑–∞–ø–∏—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"""
        if ContactInfo.objects.exists():
            return False
        return super().has_add_permission(request)


@admin.register(FAQ)
class FAQAdmin(admin.ModelAdmin):
    """‚ùì –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è —á–∞—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤"""
    list_display = ('question', 'get_short_answer', 'order', 'is_active', 'created_at')
    list_filter = ('is_active', 'created_at')
    search_fields = ('question', 'answer')
    list_editable = ('order', 'is_active')
    readonly_fields = ('created_at', 'updated_at')
    ordering = ('order', 'created_at')

    fieldsets = (
        ('‚ùì –í–æ–ø—Ä–æ—Å –∏ –æ—Ç–≤–µ—Ç', {
            'fields': ('question', 'answer')
        }),
        ('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('order', 'is_active')
        }),
        ('üìÖ –°–ª—É–∂–µ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'updated_at'),
            'classes': ('collapse',)
        }),
    )

    def get_short_answer(self, obj):
        """üìù –ö–æ—Ä–æ—Ç–∫–∏–π –æ—Ç–≤–µ—Ç –¥–ª—è —Å–ø–∏—Å–∫–∞"""
        return f"{obj.answer[:50]}..." if len(obj.answer) > 50 else obj.answer

    get_short_answer.short_description = "–û—Ç–≤–µ—Ç"

    # üìã –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    actions = ['make_active', 'make_inactive']

    def make_active(self, request, queryset):
        """‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ FAQ"""
        count = queryset.update(is_active=True)
        self.message_user(request, f"–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ FAQ: {count}")

    def make_inactive(self, request, queryset):
        """‚ùå –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ FAQ"""
        count = queryset.update(is_active=False)
        self.message_user(request, f"–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ FAQ: {count}")

    make_active.short_description = "‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ FAQ"
    make_inactive.short_description = "‚ùå –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ FAQ"


@admin.register(Banner)
class BannerAdmin(admin.ModelAdmin):
    """üé® –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –±–∞–Ω–Ω–µ—Ä–æ–≤"""
    list_display = ('title', 'get_image_preview', 'is_active', 'order', 'created_at')
    list_filter = ('is_active', 'created_at')
    search_fields = ('title', 'subtitle')
    list_editable = ('is_active', 'order')
    readonly_fields = ('created_at', 'updated_at', 'get_image_preview')
    ordering = ('order', '-created_at')

    fieldsets = (
        ('üé® –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–∞–Ω–Ω–µ—Ä–∞', {
            'fields': ('title', 'subtitle', 'image', 'get_image_preview')
        }),
        ('üîó –î–µ–π—Å—Ç–≤–∏–µ', {
            'fields': ('link', 'button_text'),
            'classes': ('collapse',)
        }),
        ('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('is_active', 'order')
        }),
        ('üìÖ –°–ª—É–∂–µ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'updated_at'),
            'classes': ('collapse',)
        }),
    )

    def get_image_preview(self, obj):
        """üñºÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        if obj.image:
            return format_html(
                '<img src="{}" style="max-width: 200px; max-height: 150px; object-fit: contain; border-radius: 5px;"/>',
                obj.image.url
            )
        return "üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ"

    get_image_preview.short_description = "–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä"


@admin.register(Testimonial)
class TestimonialAdmin(admin.ModelAdmin):
    """üí¨ –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤"""
    list_display = ('name', 'position', 'get_stars', 'featured', 'is_active', 'created_at')
    list_filter = ('rating', 'featured', 'is_active', 'created_at')
    search_fields = ('name', 'position', 'text')
    list_editable = ('featured', 'is_active')
    readonly_fields = ('created_at', 'updated_at', 'get_avatar_preview')

    fieldsets = (
        ('üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ', {
            'fields': ('name', 'position', 'avatar', 'get_avatar_preview')
        }),
        ('üí¨ –û—Ç–∑—ã–≤', {
            'fields': ('text', 'rating')
        }),
        ('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('featured', 'is_active')
        }),
        ('üìÖ –°–ª—É–∂–µ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'updated_at'),
            'classes': ('collapse',)
        }),
    )

    def get_stars(self, obj):
        """‚≠ê –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ –∑–≤–µ–∑–¥–æ—á–∫–∞–º–∏"""
        return '‚≠ê' * obj.rating

    get_stars.short_description = "–†–µ–π—Ç–∏–Ω–≥"

    def get_avatar_preview(self, obj):
        """üë§ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∞–≤–∞—Ç–∞—Ä–∞"""
        if obj.avatar:
            return format_html(
                '<img src="{}" style="width: 100px; height: 100px; object-fit: cover; border-radius: 50%;"/>',
                obj.avatar.url
            )
        return "üë§ –ê–≤–∞—Ç–∞—Ä –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω"

    get_avatar_preview.short_description = "–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∞–≤–∞—Ç–∞—Ä–∞"

# üí° –ü–†–ò–ú–ï–ß–ê–ù–ò–Ø –ü–û –ê–î–ú–ò–ù–ö–ï:
# üÜï HeroSectionAdmin:
#   - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏–Ω–ª–∞–π–Ω —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤
#   - –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≤–∏–¥–µ–æ –ø—Ä—è–º–æ –≤ –∞–¥–º–∏–Ω–∫–µ
#   - –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–æ 3 hero-—Å–µ–∫—Ü–∏–π –º–∞–∫—Å–∏–º—É–º
#   - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –¥—Ä—É–≥–∏—Ö —Å–µ–∫—Ü–∏–π –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω–æ–≤–æ–π
#   - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–º–µ—Ä–µ –≤–∏–¥–µ–æ —Ñ–∞–π–ª–∞
#   - –ü–æ–¥—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ —Å —Ü–≤–µ—Ç–æ–≤–æ–π –∏–Ω–¥–∏–∫–∞—Ü–∏–µ–π
#
# ‚úÖ –í—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∞–¥–º–∏–Ω–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
# üéØ FAQ –∞–¥–º–∏–Ω–∫–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–æ–º –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ