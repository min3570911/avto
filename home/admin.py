# üìÅ home/admin.py - –§–ò–ù–ê–õ–¨–ù–ê–Ø –í–ï–†–°–ò–Ø —Å CompanyDescriptionAdmin
# üÜï –î–û–ë–ê–í–õ–ï–ù–û: –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è CompanyDescription (—Å–∏–Ω–≥–ª—Ç–æ–Ω)
# ‚úÖ –°–û–•–†–ê–ù–ï–ù–û: –í—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∞–¥–º–∏–Ω–∫–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π

from django.contrib import admin
from django.utils.html import format_html
from django.urls import reverse
from django.utils.safestring import mark_safe
from .models import ContactInfo, FAQ, Banner, Testimonial, HeroSection, HeroAdvantage, CompanyDescription, ContactMessage, DeliveryOption


# üÜï –ù–û–í–û–ï: –ò–Ω–ª–∞–π–Ω –∞–¥–º–∏–Ω–∫–∞ –¥–ª—è –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ hero-—Å–µ–∫—Ü–∏–∏
class HeroAdvantageInline(admin.TabularInline):
    """üéØ –ò–Ω–ª–∞–π–Ω –∞–¥–º–∏–Ω–∫–∞ –¥–ª—è –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ hero-—Å–µ–∫—Ü–∏–∏"""
    model = HeroAdvantage
    extra = 1
    fields = ('icon_file', 'get_icon_preview', 'icon', 'title', 'description', 'order')
    readonly_fields = ('get_icon_preview',)
    ordering = ('order',)

    def get_icon_preview(self, obj):
        """üëÅÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∏–∫–æ–Ω–∫–∏"""
        if obj.icon_file:
            return format_html(
                '<img src="{}" style="width: 30px; height: 30px; object-fit: contain;" title="{}">',
                obj.icon_file.url,
                obj.title
            )
        elif obj.icon:
            return format_html('<span style="font-size: 24px;">{}</span>', obj.icon)
        return "‚ùå –ù–µ—Ç –∏–∫–æ–Ω–∫–∏"

    get_icon_preview.short_description = "–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä"


# üîß –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∞–¥–º–∏–Ω–∫–∏ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

@admin.register(ContactInfo)
class ContactInfoAdmin(admin.ModelAdmin):
    """üìû –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""
    list_display = ('phone', 'email', 'is_active', 'created_at')
    list_filter = ('is_active', 'created_at')
    search_fields = ('phone', 'email', 'address')
    readonly_fields = ('created_at', 'updated_at')

    fieldsets = (
        ('üìû –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('phone', 'email', 'address', 'working_hours')
        }),
        ('üåê –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏', {
            'fields': ('telegram', 'instagram', 'facebook'),
            'classes': ('collapse',)
        }),
        ('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('is_active',)
        }),
        ('üìÖ –°–ª—É–∂–µ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'updated_at'),
            'classes': ('collapse',)
        }),
    )


@admin.register(FAQ)
class FAQAdmin(admin.ModelAdmin):
    """‚ùì –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤"""
    list_display = ('question', 'is_active', 'order', 'created_at')
    list_filter = ('is_active', 'created_at')
    search_fields = ('question', 'answer')
    list_editable = ('is_active', 'order')
    readonly_fields = ('created_at', 'updated_at')

    fieldsets = (
        ('‚ùì –°–æ–¥–µ—Ä–∂–∏–º–æ–µ', {
            'fields': ('question', 'answer')
        }),
        ('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('is_active', 'order')
        }),
        ('üìÖ –°–ª—É–∂–µ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'updated_at'),
            'classes': ('collapse',)
        }),
    )


@admin.register(Banner)
class BannerAdmin(admin.ModelAdmin):
    """üé® –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –±–∞–Ω–Ω–µ—Ä–æ–≤"""
    list_display = ('title', 'get_image_preview', 'is_active', 'order', 'created_at')
    list_filter = ('is_active', 'created_at')
    search_fields = ('title', 'subtitle')
    list_editable = ('is_active', 'order')
    readonly_fields = ('created_at', 'updated_at', 'get_image_preview')

    def get_image_preview(self, obj):
        """üëÅÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        if obj.image:
            return format_html(
                '<img src="{}" style="width: 100px; height: 50px; object-fit: cover; border-radius: 5px;" title="{}">',
                obj.image.url,
                obj.title
            )
        return "‚ùå –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"

    get_image_preview.short_description = "–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä"

    fieldsets = (
        ('üé® –°–æ–¥–µ—Ä–∂–∏–º–æ–µ', {
            'fields': ('title', 'subtitle', 'image', 'get_image_preview')
        }),
        ('üîó –°—Å—ã–ª–∫–∞', {
            'fields': ('link', 'button_text'),
            'classes': ('collapse',)
        }),
        ('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('is_active', 'order')
        }),
        ('üìÖ –°–ª—É–∂–µ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'updated_at'),
            'classes': ('collapse',)
        }),
    )


@admin.register(Testimonial)
class TestimonialAdmin(admin.ModelAdmin):
    """üí¨ –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤"""
    list_display = ('name', 'get_avatar_preview', 'rating', 'featured', 'is_active', 'created_at')
    list_filter = ('rating', 'featured', 'is_active', 'created_at')
    search_fields = ('name', 'position', 'text')
    list_editable = ('featured', 'is_active')
    readonly_fields = ('created_at', 'updated_at', 'get_avatar_preview')

    def get_avatar_preview(self, obj):
        """üëÅÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∞–≤–∞—Ç–∞—Ä–∞"""
        if obj.avatar:
            return format_html(
                '<img src="{}" style="width: 40px; height: 40px; object-fit: cover; border-radius: 50%;" title="{}">',
                obj.avatar.url,
                obj.name
            )
        return "üë§ –ù–µ—Ç —Ñ–æ—Ç–æ"

    get_avatar_preview.short_description = "–§–æ—Ç–æ"

    fieldsets = (
        ('üí¨ –û—Ç–∑—ã–≤', {
            'fields': ('name', 'position', 'text', 'rating')
        }),
        ('üë§ –§–æ—Ç–æ', {
            'fields': ('avatar', 'get_avatar_preview'),
            'classes': ('collapse',)
        }),
        ('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('is_active', 'featured')
        }),
        ('üìÖ –°–ª—É–∂–µ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'updated_at'),
            'classes': ('collapse',)
        }),
    )


@admin.register(HeroSection)
class HeroSectionAdmin(admin.ModelAdmin):
    """üé¨ –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è hero-—Å–µ–∫—Ü–∏–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    list_display = ('title', 'get_video_info', 'get_advantages_count', 'is_active', 'created_at')
    list_filter = ('is_active', 'created_at')
    search_fields = ('title', 'subtitle')
    readonly_fields = ('created_at', 'updated_at', 'get_video_preview')
    inlines = [HeroAdvantageInline]

    def get_video_info(self, obj):
        """üé• –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∏–¥–µ–æ"""
        if obj.video:
            return "‚úÖ –ï—Å—Ç—å –≤–∏–¥–µ–æ"
        elif obj.fallback_image:
            return "üñºÔ∏è –¢–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
        return "‚ùå –ù–µ—Ç –º–µ–¥–∏–∞"

    get_video_info.short_description = "–ú–µ–¥–∏–∞"

    def get_advantages_count(self, obj):
        """üéØ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤"""
        count = obj.advantages.count()
        if count > 0:
            return f"üéØ {count} –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤"
        return "‚ùå –ù–µ—Ç –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤"

    get_advantages_count.short_description = "–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞"

    def get_video_preview(self, obj):
        """üëÅÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –º–µ–¥–∏–∞"""
        if obj.video:
            return format_html(
                '<div style="margin: 10px 0;">'
                '<video width="200" height="112" controls style="border-radius: 5px;">'
                '<source src="{}" type="video/mp4">'
                '–í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ.'
                '</video>'
                '</div>',
                obj.video.url
            )
        elif obj.fallback_image:
            return format_html(
                '<img src="{}" style="width: 200px; height: 112px; object-fit: cover; border-radius: 5px;" title="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ-–∑–∞–≥–ª—É—à–∫–∞">',
                obj.fallback_image.url
            )
        return "‚ùå –ú–µ–¥–∏–∞ –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω"

    get_video_preview.short_description = "–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä"

    fieldsets = (
        ('üé¨ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ hero-—Å–µ–∫—Ü–∏–∏', {
            'fields': ('title', 'subtitle')
        }),
        ('üé• –ú–µ–¥–∏–∞ –∫–æ–Ω—Ç–µ–Ω—Ç', {
            'fields': ('video', 'get_video_preview', 'fallback_image'),
            'description': '–§–æ–Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ-–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è hero-–±–ª–æ–∫–∞'
        }),
        ('üéØ –ö–Ω–æ–ø–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è', {
            'fields': ('button_text', 'button_link'),
            'classes': ('collapse',)
        }),
        ('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('is_active',)
        }),
        ('üìÖ –°–ª—É–∂–µ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'updated_at'),
            'classes': ('collapse',)
        }),
    )


# üÜï –ù–û–í–ê–Ø –ê–î–ú–ò–ù–ö–ê: CompanyDescription (—Å–∏–Ω–≥–ª—Ç–æ–Ω)
@admin.register(CompanyDescription)
class CompanyDescriptionAdmin(admin.ModelAdmin):
    """üìù –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏ (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä)"""

    # üö´ –°–∏–Ω–≥–ª—Ç–æ–Ω –ª–æ–≥–∏–∫–∞ –≤ –∞–¥–º–∏–Ω–∫–µ
    def has_add_permission(self, request):
        """üö´ –ó–∞–ø—Ä–µ—Ç–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π, –µ—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ"""
        return not CompanyDescription.objects.exists()

    def has_delete_permission(self, request, obj=None):
        """‚ö†Ô∏è –†–∞–∑—Ä–µ—à–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ (—á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)"""
        return True

    def changelist_view(self, request, extra_context=None):
        """üìù –ï—Å–ª–∏ –Ω–µ—Ç –∑–∞–ø–∏—Å–∏, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ"""
        if not CompanyDescription.objects.exists():
            return self.add_view(request)
        return super().changelist_view(request, extra_context)

    # üé® –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ–ª–µ–π –≤ –∞–¥–º–∏–Ω–∫–µ
    fieldsets = (
        ('üìù –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏', {
            'fields': ('title', 'content'),
            'description': '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Ç–µ–∫—Å—Ç –æ–ø–∏—Å–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã'
        }),
    )

# üÜï –ù–û–í–ê–Ø –ê–î–ú–ò–ù–ö–ê: ContactMessage –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
@admin.register(ContactMessage)
class ContactMessageAdmin(admin.ModelAdmin):
    """üìß –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏"""

    list_display = (
        'get_status_icon',
        'get_name_link',  # –°–¥–µ–ª–∞–µ–º –∏–º—è –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º
        'email',
        'get_subject_short',
        'get_message_preview',
        'is_processed',
        'created_at',
        'get_reply_status'
    )

    list_filter = (
        'is_processed',
        'created_at',
        'replied_at'
    )

    search_fields = (
        'name',
        'email',
        'subject',
        'message'
    )

    list_editable = ('is_processed',)

    readonly_fields = ('created_at', 'updated_at', 'replied_at')

    ordering = ('-created_at',)

    # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ–ª–µ–π
    fieldsets = (
        ('üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ', {
            'fields': ('name', 'email', 'phone')
        }),
        ('üìù –°–æ–æ–±—â–µ–Ω–∏–µ', {
            'fields': ('subject', 'message')
        }),
        ('üí¨ –û—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞', {
            'fields': ('admin_reply', 'is_processed'),
            'classes': ('collapse',)
        }),
        ('üìÖ –°–ª—É–∂–µ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'updated_at', 'replied_at'),
            'classes': ('collapse',)
        }),
    )

    def get_status_icon(self, obj):
        """üìä –ò–∫–æ–Ω–∫–∞ —Å—Ç–∞—Ç—É—Å–∞"""
        if obj.is_processed:
            return "‚úÖ"
        else:
            return "‚è≥"
    get_status_icon.short_description = "–°—Ç–∞—Ç—É—Å"

    def get_subject_short(self, obj):
        """üìù –ö–æ—Ä–æ—Ç–∫–∞—è —Ç–µ–º–∞"""
        if obj.subject:
            return obj.subject[:30] + "..." if len(obj.subject) > 30 else obj.subject
        return "–ë–µ–∑ —Ç–µ–º—ã"
    get_subject_short.short_description = "–¢–µ–º–∞"

    def get_message_preview(self, obj):
        """üëÅÔ∏è –ü—Ä–µ–≤—å—é —Å–æ–æ–±—â–µ–Ω–∏—è"""
        preview = obj.message[:50] + "..." if len(obj.message) > 50 else obj.message
        return format_html('<span title="{}">{}</span>', obj.message, preview)
    get_message_preview.short_description = "–°–æ–æ–±—â–µ–Ω–∏–µ"

    def get_name_link(self, obj):
        """üë§ –ò–º—è –∫–∞–∫ —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é"""
        from django.urls import reverse
        url = reverse('admin:home_contactmessage_change', args=[obj.uid])
        return format_html('<a href="{}" style="font-weight: bold;">{}</a>', url, obj.name)
    get_name_link.short_description = "–ò–º—è"

    def get_reply_status(self, obj):
        """üí¨ –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞"""
        if obj.admin_reply:
            return format_html(
                '<span style="color: green;">‚úÖ –û—Ç–≤–µ—á–µ–Ω–æ</span>'
            )
        else:
            return format_html(
                '<span style="color: orange;">‚è≥ –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞</span>'
            )
    get_reply_status.short_description = "–û—Ç–≤–µ—Ç"

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –∞–¥–º–∏–Ω–∫–µ
    actions = ['mark_as_processed', 'mark_as_unprocessed']

    def mark_as_processed(self, request, queryset):
        """‚úÖ –û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ"""
        queryset.update(is_processed=True)
        self.message_user(request, f"–û—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ: {queryset.count()} —Å–æ–æ–±—â–µ–Ω–∏–π")
    mark_as_processed.short_description = "–û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ"

    def mark_as_unprocessed(self, request, queryset):
        """‚è≥ –û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ"""
        queryset.update(is_processed=False)
        self.message_user(request, f"–û—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ: {queryset.count()} —Å–æ–æ–±—â–µ–Ω–∏–π")
    mark_as_unprocessed.short_description = "–û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ"


# üöö –ù–û–í–ê–Ø –ê–î–ú–ò–ù–ö–ê: DeliveryOption –¥–ª—è —Å–ø–æ—Å–æ–±–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏
@admin.register(DeliveryOption)
class DeliveryOptionAdmin(admin.ModelAdmin):
    """üöö –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è —Å–ø–æ—Å–æ–±–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –æ–ø–ª–∞—Ç—ã"""

    list_display = (
        'get_icon_display',
        'title',
        'get_price_short',
        'get_delivery_time_short',
        'coverage_area',
        'is_active',
        'order',
        'created_at'
    )

    list_filter = (
        'is_active',
        'created_at'
    )

    search_fields = (
        'title',
        'description',
        'coverage_area',
        'price_info'
    )

    list_editable = ('is_active', 'order')

    readonly_fields = ('created_at', 'updated_at')

    ordering = ('order', 'title')

    fieldsets = (
        ('üìã –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('title', 'description', 'icon')
        }),
        ('üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏', {
            'fields': ('price_info', 'delivery_time')
        }),
        ('üåç –ó–æ–Ω–∞ –ø–æ–∫—Ä—ã—Ç–∏—è –∏ –æ–ø–ª–∞—Ç–∞', {
            'fields': ('coverage_area', 'payment_methods')
        }),
        ('üìù –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('additional_info',),
            'classes': ('collapse',)
        }),
        ('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('is_active', 'order')
        }),
        ('üìÖ –°–ª—É–∂–µ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'updated_at'),
            'classes': ('collapse',)
        }),
    )

    def get_icon_display(self, obj):
        """üé® –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏"""
        if obj.icon:
            if "fa" in obj.icon:
                return format_html('<i class="{}" style="font-size: 1.2rem;"></i>', obj.icon)
            else:
                return format_html('<span style="font-size: 1.2rem;">{}</span>', obj.icon)
        return "‚ùå"
    get_icon_display.short_description = "–ò–∫–æ–Ω–∫–∞"

    def get_price_short(self, obj):
        """üí∞ –ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ü–µ–Ω–µ"""
        if obj.price_info:
            return obj.price_info[:30] + "..." if len(obj.price_info) > 30 else obj.price_info
        return "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
    get_price_short.short_description = "–°—Ç–æ–∏–º–æ—Å—Ç—å"

    def get_delivery_time_short(self, obj):
        """‚è±Ô∏è –ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ä–æ–∫–∞—Ö"""
        if obj.delivery_time:
            return obj.delivery_time
        return "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
    get_delivery_time_short.short_description = "–°—Ä–æ–∫–∏"

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    actions = ['activate_delivery_options', 'deactivate_delivery_options']

    def activate_delivery_options(self, request, queryset):
        """‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Å–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏"""
        queryset.update(is_active=True)
        self.message_user(request, f"–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ: {queryset.count()} —Å–ø–æ—Å–æ–±–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏")
    activate_delivery_options.short_description = "–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏"

    def deactivate_delivery_options(self, request, queryset):
        """‚ùå –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Å–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏"""
        queryset.update(is_active=False)
        self.message_user(request, f"–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ: {queryset.count()} —Å–ø–æ—Å–æ–±–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏")
    deactivate_delivery_options.short_description = "–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏"


# üîß –ò–¢–û–ì–û–í–´–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø –í –§–ê–ô–õ–ï:
# ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: CompanyDescriptionAdmin —Å —Å–∏–Ω–≥–ª—Ç–æ–Ω –ª–æ–≥–∏–∫–æ–π
# ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: ContactMessageAdmin –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
# ‚úÖ –§–£–ù–ö–¶–ò–ò:
#    - –ü—Ä–æ—Å—Ç–∞—è –∞–¥–º–∏–Ω–∫–∞ —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –∏ —Å–æ–¥–µ—Ä–∂–∏–º—ã–º
#    - –°–∏–Ω–≥–ª—Ç–æ–Ω –ª–æ–≥–∏–∫–∞ (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä)
#    - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ
#    - –ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞–¥–º–∏–Ω–∫–∞ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
#    - –ü—Ä–µ–≤—å—é —Å–æ–æ–±—â–µ–Ω–∏–π, —Å—Ç–∞—Ç—É—Å—ã, —Ñ–∏–ª—å—Ç—Ä—ã
#    - –ú–∞—Å—Å–æ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
# ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–±—Ä–∞–Ω –∫–æ–Ω—Ñ–ª–∏–∫—Ç fields –∏ fieldsets
# ‚úÖ –°–û–•–†–ê–ù–ï–ù–û: –í—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∞–¥–º–∏–Ω–∫–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π