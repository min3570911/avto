# üìÅ home/admin.py - –ë–ï–ó ShippingAddress
# üóëÔ∏è –ü–û–õ–ù–û–°–¢–¨–Æ –£–î–ê–õ–ï–ù ShippingAddress

from django.contrib import admin
from django.utils.html import format_html
from .models import ContactInfo, FAQ, Banner, Testimonial


# üóëÔ∏è –£–î–ê–õ–ï–ù–û: from .models import ShippingAddress


@admin.register(ContactInfo)
class ContactInfoAdmin(admin.ModelAdmin):
    """üìû –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""
    list_display = ('phone', 'email', 'working_hours', 'is_active', 'created_at')
    list_filter = ('is_active', 'created_at')
    search_fields = ('phone', 'email', 'address')
    readonly_fields = ('created_at', 'updated_at')

    fieldsets = (
        ('üìû –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã', {
            'fields': ('phone', 'email', 'address', 'working_hours')
        }),
        ('üåê –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏', {
            'fields': ('telegram', 'instagram', 'facebook'),
            'classes': ('collapse',)
        }),
        ('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('is_active',)
        }),
        ('üìÖ –°–ª—É–∂–µ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'updated_at'),
            'classes': ('collapse',)
        }),
    )

    def has_add_permission(self, request):
        """üö´ –†–∞–∑—Ä–µ—à–∞–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –∑–∞–ø–∏—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"""
        if ContactInfo.objects.exists():
            return False
        return super().has_add_permission(request)


@admin.register(FAQ)
class FAQAdmin(admin.ModelAdmin):
    """‚ùì –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è —á–∞—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤"""
    list_display = ('question', 'get_short_answer', 'order', 'is_active', 'created_at')
    list_filter = ('is_active', 'created_at')
    search_fields = ('question', 'answer')
    list_editable = ('order', 'is_active')
    readonly_fields = ('created_at', 'updated_at')
    ordering = ('order', 'created_at')

    fieldsets = (
        ('‚ùì –í–æ–ø—Ä–æ—Å –∏ –æ—Ç–≤–µ—Ç', {
            'fields': ('question', 'answer')
        }),
        ('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('order', 'is_active')
        }),
        ('üìÖ –°–ª—É–∂–µ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'updated_at'),
            'classes': ('collapse',)
        }),
    )

    def get_short_answer(self, obj):
        """üìù –ö–æ—Ä–æ—Ç–∫–∏–π –æ—Ç–≤–µ—Ç –¥–ª—è —Å–ø–∏—Å–∫–∞"""
        return f"{obj.answer[:50]}..." if len(obj.answer) > 50 else obj.answer

    get_short_answer.short_description = "–û—Ç–≤–µ—Ç"

    # üìã –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    actions = ['make_active', 'make_inactive']

    def make_active(self, request, queryset):
        """‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ FAQ"""
        count = queryset.update(is_active=True)
        self.message_user(request, f"–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ FAQ: {count}")

    def make_inactive(self, request, queryset):
        """‚ùå –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ FAQ"""
        count = queryset.update(is_active=False)
        self.message_user(request, f"–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ FAQ: {count}")

    make_active.short_description = "‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ FAQ"
    make_inactive.short_description = "‚ùå –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ FAQ"


@admin.register(Banner)
class BannerAdmin(admin.ModelAdmin):
    """üé® –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –±–∞–Ω–Ω–µ—Ä–æ–≤"""
    list_display = ('title', 'get_image_preview', 'is_active', 'order', 'created_at')
    list_filter = ('is_active', 'created_at')
    search_fields = ('title', 'subtitle')
    list_editable = ('is_active', 'order')
    readonly_fields = ('created_at', 'updated_at', 'get_image_preview')
    ordering = ('order', '-created_at')

    fieldsets = (
        ('üé® –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–∞–Ω–Ω–µ—Ä–∞', {
            'fields': ('title', 'subtitle', 'image', 'get_image_preview')
        }),
        ('üîó –î–µ–π—Å—Ç–≤–∏–µ', {
            'fields': ('link', 'button_text'),
            'classes': ('collapse',)
        }),
        ('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('is_active', 'order')
        }),
        ('üìÖ –°–ª—É–∂–µ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'updated_at'),
            'classes': ('collapse',)
        }),
    )

    def get_image_preview(self, obj):
        """üñºÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        if obj.image:
            return format_html(
                '<img src="{}" width="200" style="border-radius: 5px;"/>',
                obj.image.url
            )
        return "–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"

    get_image_preview.short_description = "–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä"

    # üìã –î–µ–π—Å—Ç–≤–∏—è
    actions = ['make_active', 'make_inactive']

    def make_active(self, request, queryset):
        count = queryset.update(is_active=True)
        self.message_user(request, f"–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ –±–∞–Ω–Ω–µ—Ä–æ–≤: {count}")

    def make_inactive(self, request, queryset):
        count = queryset.update(is_active=False)
        self.message_user(request, f"–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ –±–∞–Ω–Ω–µ—Ä–æ–≤: {count}")

    make_active.short_description = "‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –±–∞–Ω–Ω–µ—Ä—ã"
    make_inactive.short_description = "‚ùå –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –±–∞–Ω–Ω–µ—Ä—ã"


@admin.register(Testimonial)
class TestimonialAdmin(admin.ModelAdmin):
    """üí¨ –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤"""
    list_display = ('name', 'position', 'get_short_text', 'rating', 'featured', 'is_active', 'created_at')
    list_filter = ('rating', 'featured', 'is_active', 'created_at')
    search_fields = ('name', 'position', 'text')
    list_editable = ('featured', 'is_active')
    readonly_fields = ('created_at', 'updated_at', 'get_avatar_preview')
    ordering = ('-featured', '-created_at')

    fieldsets = (
        ('üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ', {
            'fields': ('name', 'position', 'avatar', 'get_avatar_preview')
        }),
        ('üí¨ –û—Ç–∑—ã–≤', {
            'fields': ('text', 'rating')
        }),
        ('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('featured', 'is_active')
        }),
        ('üìÖ –°–ª—É–∂–µ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'updated_at'),
            'classes': ('collapse',)
        }),
    )

    def get_short_text(self, obj):
        """üìù –ö–æ—Ä–æ—Ç–∫–∏–π —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞"""
        return f"{obj.text[:40]}..." if len(obj.text) > 40 else obj.text

    get_short_text.short_description = "–û—Ç–∑—ã–≤"

    def get_avatar_preview(self, obj):
        """üë§ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∞–≤–∞—Ç–∞—Ä–∞"""
        if obj.avatar:
            return format_html(
                '<img src="{}" width="100" height="100" style="border-radius: 50%; object-fit: cover;"/>',
                obj.avatar.url
            )
        return "–ù–µ—Ç —Ñ–æ—Ç–æ"

    get_avatar_preview.short_description = "–§–æ—Ç–æ"

    # üìã –î–µ–π—Å—Ç–≤–∏—è
    actions = ['make_featured', 'remove_featured', 'make_active', 'make_inactive']

    def make_featured(self, request, queryset):
        count = queryset.update(featured=True)
        self.message_user(request, f"–û—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ: {count}")

    def remove_featured(self, request, queryset):
        count = queryset.update(featured=False)
        self.message_user(request, f"–£–±—Ä–∞–Ω–æ –∏–∑ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö: {count}")

    def make_active(self, request, queryset):
        count = queryset.update(is_active=True)
        self.message_user(request, f"–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ –æ—Ç–∑—ã–≤–æ–≤: {count}")

    def make_inactive(self, request, queryset):
        count = queryset.update(is_active=False)
        self.message_user(request, f"–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ –æ—Ç–∑—ã–≤–æ–≤: {count}")

    make_featured.short_description = "‚≠ê –°–¥–µ–ª–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–º–∏"
    remove_featured.short_description = "üîΩ –£–±—Ä–∞—Ç—å –∏–∑ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö"
    make_active.short_description = "‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å"
    make_inactive.short_description = "‚ùå –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å"


# üé® –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω–∫–∏
admin.site.site_header = "üõí –ê–≤—Ç–æ–∫–æ–≤—Ä–∏–∫–∏ - –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"
admin.site.site_title = "–ê–≤—Ç–æ–∫–æ–≤—Ä–∏–∫–∏"
admin.site.index_title = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–æ–º"

# üóëÔ∏è –£–î–ê–õ–ï–ù–û:
# - ShippingAddressAdmin (–±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω)
# - –í—Å–µ —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –∞–¥—Ä–µ—Å–∞–º–∏ –¥–æ—Å—Ç–∞–≤–∫–∏

# ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û:
# - –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –±–∞–Ω–Ω–µ—Ä–æ–≤ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
# - –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤
# - –£–ª—É—á—à–µ–Ω–Ω–∞—è –∞–¥–º–∏–Ω–∫–∞ FAQ —Å –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–æ–º