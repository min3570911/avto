# üìÅ home/models.py - –§–ò–ù–ê–õ–¨–ù–ê–Ø –í–ï–†–°–ò–Ø —Å CompanyDescription
# üÜï –î–û–ë–ê–í–õ–ï–ù–û: CompanyDescription –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏
# ‚úÖ –°–û–•–†–ê–ù–ï–ù–û: –í—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–æ–¥–µ–ª–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π

from django.db import models
from django.contrib.auth.models import User
from base.models import BaseModel
from django_ckeditor_5.fields import CKEditor5Field


# üåü –ú–æ–¥–µ–ª–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–∞–π—Ç–∞

class ContactInfo(BaseModel):
    """üìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–∞–π—Ç–∞"""
    phone = models.CharField(max_length=20, verbose_name="–¢–µ–ª–µ—Ñ–æ–Ω")
    email = models.EmailField(verbose_name="Email")
    address = models.TextField(verbose_name="–§–∏–∑–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å")
    working_hours = models.CharField(max_length=100, verbose_name="–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã")

    # üåê –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏
    telegram = models.URLField(blank=True, null=True, verbose_name="Telegram")
    instagram = models.URLField(blank=True, null=True, verbose_name="Instagram")
    facebook = models.URLField(blank=True, null=True, verbose_name="Facebook")

    # ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    is_active = models.BooleanField(default=True, verbose_name="–ê–∫—Ç–∏–≤–Ω–∞")

    def __str__(self):
        return f"–ö–æ–Ω—Ç–∞–∫—Ç—ã ({self.phone})"

    class Meta:
        verbose_name = "–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
        verbose_name_plural = "–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"


class FAQ(BaseModel):
    """‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã"""
    question = models.CharField(max_length=255, verbose_name="–í–æ–ø—Ä–æ—Å")
    answer = models.TextField(verbose_name="–û—Ç–≤–µ—Ç")
    order = models.PositiveIntegerField(default=0, verbose_name="–ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è")
    is_active = models.BooleanField(default=True, verbose_name="–ê–∫—Ç–∏–≤–µ–Ω")

    def __str__(self):
        return self.question

    class Meta:
        verbose_name = "–ß–∞—Å—Ç—ã–π –≤–æ–ø—Ä–æ—Å"
        verbose_name_plural = "–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã"
        ordering = ['order', 'created_at']


class Banner(BaseModel):
    """üé® –ë–∞–Ω–Ω–µ—Ä—ã –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    title = models.CharField(max_length=200, verbose_name="–ó–∞–≥–æ–ª–æ–≤–æ–∫")
    subtitle = models.CharField(max_length=300, blank=True, null=True, verbose_name="–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫")
    image = models.ImageField(upload_to='banners/', verbose_name="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
    link = models.URLField(blank=True, null=True, verbose_name="–°—Å—ã–ª–∫–∞")
    button_text = models.CharField(max_length=50, blank=True, null=True, verbose_name="–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏")

    # ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    is_active = models.BooleanField(default=True, verbose_name="–ê–∫—Ç–∏–≤–µ–Ω")
    order = models.PositiveIntegerField(default=0, verbose_name="–ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è")

    def __str__(self):
        return self.title

    class Meta:
        verbose_name = "–ë–∞–Ω–Ω–µ—Ä"
        verbose_name_plural = "–ë–∞–Ω–Ω–µ—Ä—ã"
        ordering = ['order', '-created_at']


class Testimonial(BaseModel):
    """üí¨ –û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    name = models.CharField(max_length=100, verbose_name="–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞")
    position = models.CharField(max_length=100, blank=True, null=True, verbose_name="–î–æ–ª–∂–Ω–æ—Å—Ç—å/–≥–æ—Ä–æ–¥")
    text = models.TextField(verbose_name="–¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞")
    avatar = models.ImageField(upload_to='testimonials/', blank=True, null=True, verbose_name="–§–æ—Ç–æ")
    rating = models.PositiveSmallIntegerField(
        choices=[(i, i) for i in range(1, 6)],
        default=5,
        verbose_name="–û—Ü–µ–Ω–∫–∞"
    )

    # ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    is_active = models.BooleanField(default=True, verbose_name="–ê–∫—Ç–∏–≤–µ–Ω")
    featured = models.BooleanField(default=False, verbose_name="–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π")

    def __str__(self):
        return f"–û—Ç–∑—ã–≤ –æ—Ç {self.name}"

    class Meta:
        verbose_name = "–û—Ç–∑—ã–≤ –∫–ª–∏–µ–Ω—Ç–∞"
        verbose_name_plural = "–û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤"
        ordering = ['-featured', '-created_at']


# üé¨ Hero-—Å–µ–∫—Ü–∏—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
class HeroSection(BaseModel):
    """üé¨ Hero-—Å–µ–∫—Ü–∏—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    title = models.CharField(max_length=200, verbose_name="–ó–∞–≥–æ–ª–æ–≤–æ–∫", default="EVA –∫–æ–≤—Ä–∏–∫–∏ –≤ –ú–∏–Ω—Å–∫–µ")
    subtitle = models.CharField(
        max_length=300,
        verbose_name="–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫",
        default="–ü—Ä–µ–º–∏—É–º –∫–æ–≤—Ä–∏–∫–∏ –∏–∑ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —á–∏—Å—Ç–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞"
    )

    # üé• –ú–µ–¥–∏–∞ –∫–æ–Ω—Ç–µ–Ω—Ç
    video = models.FileField(
        upload_to='hero_videos/',
        blank=True,
        null=True,
        verbose_name="–§–æ–Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ",
        help_text="MP4 —Ñ–∞–π–ª –¥–ª—è —Ñ–æ–Ω–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ 10MB)"
    )
    fallback_image = models.ImageField(
        upload_to='hero_images/',
        blank=True,
        null=True,
        verbose_name="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ-–∑–∞–≥–ª—É—à–∫–∞",
        help_text="–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –µ—Å–ª–∏ –≤–∏–¥–µ–æ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è"
    )

    # üéØ –ö–Ω–æ–ø–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è
    button_text = models.CharField(
        max_length=50,
        verbose_name="–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏",
        default="–°–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥"
    )
    button_link = models.URLField(
        verbose_name="–°—Å—ã–ª–∫–∞ –∫–Ω–æ–ø–∫–∏",
        default="/products/"
    )

    # ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    is_active = models.BooleanField(default=True, verbose_name="–ê–∫—Ç–∏–≤–Ω–∞")

    def __str__(self):
        return f"Hero-—Å–µ–∫—Ü–∏—è: {self.title}"

    class Meta:
        verbose_name = "Hero-—Å–µ–∫—Ü–∏—è"
        verbose_name_plural = "Hero-—Å–µ–∫—Ü–∏–∏"
        ordering = ['-created_at']


class HeroAdvantage(BaseModel):
    """üéØ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥–ª—è hero-—Å–µ–∫—Ü–∏–∏"""
    hero_section = models.ForeignKey(
        HeroSection,
        on_delete=models.CASCADE,
        related_name='advantages',
        verbose_name="Hero-—Å–µ–∫—Ü–∏—è"
    )

    # üé® –ò–∫–æ–Ω–∫–∞ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
    icon_file = models.ImageField(
        upload_to='hero_icons/',
        blank=True,
        null=True,
        verbose_name="–§–∞–π–ª –∏–∫–æ–Ω–∫–∏",
        help_text="SVG –∏–ª–∏ PNG —Ñ–∞–π–ª (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 64x64px)"
    )
    icon = models.CharField(
        max_length=10,
        blank=True,
        null=True,
        verbose_name="–≠–º–æ–¥–∑–∏ –∏–∫–æ–Ω–∫–∞",
        help_text="–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ —Ñ–∞–π–ª—É - —ç–º–æ–¥–∑–∏ –∏–ª–∏ —Ç–µ–∫—Å—Ç"
    )

    # üìù –°–æ–¥–µ—Ä–∂–∏–º–æ–µ
    title = models.CharField(max_length=100, verbose_name="–ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞")
    description = models.CharField(max_length=200, verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ")

    # ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    order = models.PositiveIntegerField(default=0, verbose_name="–ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è")

    def __str__(self):
        return f"{self.title} (Hero: {self.hero_section.title})"

    class Meta:
        verbose_name = "–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ Hero-—Å–µ–∫—Ü–∏–∏"
        verbose_name_plural = "–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ Hero-—Å–µ–∫—Ü–∏–∏"
        ordering = ['order', 'created_at']


# üÜï –ù–û–í–ê–Ø –ú–û–î–ï–õ–¨: CompanyDescription –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏ (—Å–∏–Ω–≥–ª—Ç–æ–Ω)
class CompanyDescription(BaseModel):
    """üìù –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä)"""

    title = models.CharField(
        max_length=200,
        verbose_name="–ó–∞–≥–æ–ª–æ–≤–æ–∫",
        default="–û –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏",
        help_text="–ó–∞–≥–æ–ª–æ–≤–æ–∫ –±–ª–æ–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏"
    )

    content = CKEditor5Field(
        verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏",
        help_text="–¢–µ–∫—Å—Ç —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∫–æ–º–ø–∞–Ω–∏–∏, –ø—Ä–æ–¥—É–∫—Ü–∏–∏, –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤",
        config_name='default'  # üé® –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π CKEditor 5
    )

    def __str__(self):
        return f"üìù {self.title}"

    class Meta:
        verbose_name = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏"
        verbose_name_plural = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏"

    def save(self, *args, **kwargs):
        """üíæ –°–∏–Ω–≥–ª—Ç–æ–Ω –ª–æ–≥–∏–∫–∞ - —Ä–∞–∑—Ä–µ—à–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä"""
        if CompanyDescription.objects.exists() and not self.pk:
            return  # üö´ –ù–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏, –µ—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å
        super().save(*args, **kwargs)

# üîß –ò–¢–û–ì–û–í–´–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø –í –§–ê–ô–õ–ï:
# ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: CompanyDescription - –ø—Ä–æ—Å—Ç–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏
# ‚úÖ –§–£–ù–ö–¶–ò–ò:
#    - –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å CKEditor 5
#    - –°–∏–Ω–≥–ª—Ç–æ–Ω –ª–æ–≥–∏–∫–∞ (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä)
#    - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
# ‚úÖ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨: –í–∞–ª–∏–¥–∞—Ü–∏—è –≤ –º–µ—Ç–æ–¥–µ save()
# ‚úÖ –°–û–•–†–ê–ù–ï–ù–û: –í—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–æ–¥–µ–ª–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π