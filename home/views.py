# home/views.py
from django.shortcuts import render, get_object_or_404
from products.models import Product, Category, KitVariant
from django.core.paginator import Paginator


def index(request):
    """üì± –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —Ç–æ–≤–∞—Ä–∞–º–∏"""
    # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏–∑ GET-–∑–∞–ø—Ä–æ—Å–∞
    category_filter = request.GET.get('category')
    sort_option = request.GET.get('sort')

    # –ë–∞–∑–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
    products_query = Product.objects.filter(parent=None)

    # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω
    if category_filter:
        categories = Category.objects.filter(category_name=category_filter)
        if categories.exists():
            products_query = products_query.filter(category__in=categories)

    # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞
    if sort_option == 'newest':
        products_query = products_query.filter(newest_product=True)
    elif sort_option == 'priceAsc':
        products_query = products_query.order_by('price')
    elif sort_option == 'priceDesc':
        products_query = products_query.order_by('-price')

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    categories = Category.objects.all()

    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—é "–°–∞–ª–æ–Ω"
    salon_kit = KitVariant.objects.filter(code='salon').first()

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    page = request.GET.get('page', 1)
    paginator = Paginator(products_query, 8)  # 8 —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    products = paginator.get_page(page)

    context = {
        'products': products,
        'categories': categories,
        'selected_category': category_filter,
        'selected_sort': sort_option,
        'salon_kit': salon_kit,  # –ü–µ—Ä–µ–¥–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–∏ –≤ —à–∞–±–ª–æ–Ω
    }

    return render(request, 'home/index.html', context)


def category_view(request, slug):
    """
    üõçÔ∏è –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å —Ç–æ–≤–∞—Ä–∞–º–∏

    Args:
        request: HTTP-–∑–∞–ø—Ä–æ—Å
        slug: –°–ª–∞–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ URL

    Returns:
        –û—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω —Å–æ —Å–ø–∏—Å–∫–æ–º —Ç–æ–≤–∞—Ä–æ–≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤–Ω–∏–∑—É
    """
    # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 404
    category = get_object_or_404(Category, slug=slug)

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    products_query = Product.objects.filter(category=category, parent=None)

    # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ index view)
    sort_option = request.GET.get('sort')
    if sort_option == 'newest':
        products_query = products_query.filter(newest_product=True)
    elif sort_option == 'priceAsc':
        products_query = products_query.order_by('price')
    elif sort_option == 'priceDesc':
        products_query = products_query.order_by('-price')

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    page = request.GET.get('page', 1)
    paginator = Paginator(products_query, 12)  # 12 —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    products = paginator.get_page(page)

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
    categories = Category.objects.all()

    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ CMS
    # –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –±—ã —É –º–æ–¥–µ–ª–∏ Category –±—ã–ª–æ –ø–æ–ª–µ description:
    # category_description = category.description
    category_description = None  # –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ —à–∞–±–ª–æ–Ω–µ

    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—é "–°–∞–ª–æ–Ω"
    salon_kit = KitVariant.objects.filter(code='salon').first()

    context = {
        'category': category,
        'products': products,
        'categories': categories,
        'selected_sort': sort_option,
        'category_description': category_description,
        'salon_kit': salon_kit,
    }

    return render(request, 'home/category.html', context)


# –í–ê–ñ–ù–û: –ó–¥–µ—Å—å —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è product_search –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å urls.py
def product_search(request):
    """üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∑–∞–ø—Ä–æ—Å—É"""
    query = request.GET.get('q', '')
    products = None

    if query:
        products = Product.objects.filter(product_name__icontains=query)

    context = {
        'query': query,
        'products': products,
    }

    return render(request, 'home/search.html', context)


def contact(request):
    """üìû –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"""
    form_id = "xrgpdzwe"  # ID —Ñ–æ—Ä–º—ã Formspree
    return render(request, 'home/contact.html', {'form_id': form_id})


def about(request):
    """‚ÑπÔ∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ –Ω–∞—Å"""
    return render(request, 'home/about.html')


def privacy_policy(request):
    """üìú –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏"""
    return render(request, 'home/privacy_policy.html')


def terms_and_conditions(request):
    """üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Å–ª–æ–≤–∏–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"""
    return render(request, 'home/terms_and_conditions.html')