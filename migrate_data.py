#!/usr/bin/env python3
# üìÅ fix_migrations.py - –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ –º–∏–≥—Ä–∞—Ü–∏–π
# üîß –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ

import os
import shutil
from pathlib import Path


def backup_migrations():
    """üì¶ –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –º–∏–≥—Ä–∞—Ü–∏–π"""
    print("üì¶ –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –º–∏–≥—Ä–∞—Ü–∏–π...")

    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –±—ç–∫–∞–ø–æ–≤
    backup_dir = Path("migrations_backup")
    backup_dir.mkdir(exist_ok=True)

    # –ö–æ–ø–∏—Ä—É–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
    for app in ['products', 'blog']:
        app_migrations = Path(app) / 'migrations'
        if app_migrations.exists():
            backup_app_dir = backup_dir / app
            if backup_app_dir.exists():
                shutil.rmtree(backup_app_dir)
            shutil.copytree(app_migrations, backup_app_dir)
            print(f"‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –º–∏–≥—Ä–∞—Ü–∏–∏ {app}")


def remove_problematic_migrations():
    """üóëÔ∏è –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏"""
    print("üóëÔ∏è –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏...")

    # –§–∞–π–ª—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    files_to_remove = [
        'products/migrations/0026_alter_product_product_desription.py',
        'blog/migrations/0001_initial.py',
        'blog/migrations/0002_migrate_to_ckeditor5.py',
        'products/migrations/0027_migrate_to_ckeditor5.py'
    ]

    for file_path in files_to_remove:
        file_path = Path(file_path)
        if file_path.exists():
            file_path.unlink()
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: {file_path}")
        else:
            print(f"‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")


def show_commands():
    """üìã –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"""
    print("\n" + "=" * 60)
    print("üìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
    print("=" * 60)
    print()
    print("1Ô∏è‚É£ –û—Ç–∫–∞—Ç–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –≤–µ—Ä—Å–∏–∏:")
    print("   python manage.py migrate products 0025")
    print("   python manage.py migrate blog zero")
    print()
    print("2Ô∏è‚É£ –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏:")
    print("   python manage.py makemigrations blog")
    print("   python manage.py makemigrations products")
    print()
    print("3Ô∏è‚É£ –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –Ω–æ–≤—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏:")
    print("   python manage.py migrate")
    print()
    print("4Ô∏è‚É£ –°–æ–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã:")
    print("   python manage.py collectstatic --clear --noinput")
    print()
    print("5Ô∏è‚É£ –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä:")
    print("   python manage.py runserver localhost:8000")
    print()
    print("=" * 60)


def main():
    """üöÄ –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ –º–∏–≥—Ä–∞—Ü–∏–π Django")
    print("=" * 50)

    response = input("üì¶ –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –º–∏–≥—Ä–∞—Ü–∏–π? (y/n): ")
    if response.lower() == 'y':
        backup_migrations()

    response = input("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã –º–∏–≥—Ä–∞—Ü–∏–π? (y/n): ")
    if response.lower() == 'y':
        remove_problematic_migrations()

    show_commands()

    print("\n‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print("‚ö†Ô∏è –í–ê–ñ–ù–û: –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã –≤—ã—à–µ –ø–æ –ø–æ—Ä—è–¥–∫—É!")


if __name__ == "__main__":
    main()