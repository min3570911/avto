# products/admin.py

from django.contrib import admin
from django.utils.html import mark_safe
from .models import *


# Register your models here.

class ProductImageAdmin(admin.StackedInline):
    model = ProductImage
    verbose_name = "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"
    verbose_name_plural = "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞"


class ProductAdmin(admin.ModelAdmin):
    list_display = ['product_name', 'category', 'price', 'newest_product']
    list_filter = ['category', 'newest_product']
    search_fields = ['product_name', 'product_desription']
    inlines = [ProductImageAdmin]


@admin.register(Category)
class CategoryAdmin(admin.ModelAdmin):
    list_display = ['category_name', 'slug']
    prepopulated_fields = {'slug': ('category_name',)}


@admin.register(ColorVariant)
class ColorVariantAdmin(admin.ModelAdmin):
    list_display = ['color_name', 'price']
    model = ColorVariant


@admin.register(KitVariant)
class KitVariantAdmin(admin.ModelAdmin):
    # üí∞ –û–ë–ù–û–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–ª—è –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–ø—Ü–∏—è–º–∏
    list_display = ['name', 'code', 'price_modifier', 'order', 'is_option', 'formatted_price']
    list_filter = ['is_option']
    search_fields = ['name', 'code']
    list_editable = ['price_modifier', 'order', 'is_option']  # üéØ –ú–æ–∂–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä—è–º–æ –≤ —Å–ø–∏—Å–∫–µ
    ordering = ['is_option', 'order']  # –°–Ω–∞—á–∞–ª–∞ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–∏, –ø–æ—Ç–æ–º –æ–ø—Ü–∏–∏

    def formatted_price(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ü–µ–Ω—É –≤ —É–¥–æ–±–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
        return f"{obj.price_modifier} —Ä—É–±."

    formatted_price.short_description = "–¶–µ–Ω–∞"

    # üé® –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ–ª–µ–π –≤ –∞–¥–º–∏–Ω–∫–µ
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('name', 'code', 'price_modifier')
        }),
        ('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è', {
            'fields': ('order', 'is_option', 'image')
        }),
    )

    # üö® –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    actions = ['make_option', 'make_kit', 'reset_prices']

    def make_option(self, request, queryset):
        """–ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –æ–ø—Ü–∏–∏"""
        queryset.update(is_option=True, order=100)
        self.message_user(request, f"–ü—Ä–µ–≤—Ä–∞—â–µ–Ω–æ –≤ –æ–ø—Ü–∏–∏: {queryset.count()} –∑–∞–ø–∏—Å–µ–π")

    make_option.short_description = "–°–¥–µ–ª–∞—Ç—å –æ–ø—Ü–∏—è–º–∏"

    def make_kit(self, request, queryset):
        """–ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–∏"""
        queryset.update(is_option=False)
        self.message_user(request, f"–ü—Ä–µ–≤—Ä–∞—â–µ–Ω–æ –≤ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–∏: {queryset.count()} –∑–∞–ø–∏—Å–µ–π")

    make_kit.short_description = "–°–¥–µ–ª–∞—Ç—å –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è–º–∏"


@admin.register(Color)
class ColorAdmin(admin.ModelAdmin):
    list_display = ['name', 'color_type', 'hex_code', 'color_preview', 'is_available', 'display_order']
    list_filter = ['color_type', 'is_available']
    list_editable = ['display_order', 'is_available']
    search_fields = ['name']
    ordering = ['color_type', 'display_order']

    def color_preview(self, obj):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ü–≤–µ—Ç–Ω–æ–π –∫–≤–∞–¥—Ä–∞—Ç —Å —Ü–≤–µ—Ç–æ–º –≤ –∞–¥–º–∏–Ω–∫–µ"""
        return mark_safe(
            f'<div style="width:20px; height:20px; background-color:{obj.hex_code}; border:1px solid #666;"></div>')

    color_preview.short_description = "–¶–≤–µ—Ç"

    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('name', 'hex_code', 'color_type', 'display_order')
        }),
        ('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', {
            'fields': ('carpet_image', 'border_image', 'carpet_preview', 'border_preview'),
            'description': '–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ —Ü–≤–µ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è.'
        }),
        ('–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å', {
            'fields': ('is_available',),
            'description': '–ï—Å–ª–∏ –º–∞—Ç–µ—Ä–∏–∞–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –æ—Ç–∫–ª—é—á–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–ª–∞–≥'
        }),
    )

    readonly_fields = ['carpet_preview', 'border_preview']


@admin.register(Coupon)
class CouponAdmin(admin.ModelAdmin):
    list_display = ['coupon_code', 'discount_amount', 'minimum_amount', 'is_expired']
    list_filter = ['is_expired']
    list_editable = ['is_expired', 'discount_amount', 'minimum_amount']


@admin.register(ProductReview)
class ProductReviewAdmin(admin.ModelAdmin):
    list_display = ['product', 'user', 'stars', 'date_added']
    list_filter = ['stars', 'date_added']
    search_fields = ['content', 'user__username', 'product__product_name']


@admin.register(Wishlist)
class WishlistAdmin(admin.ModelAdmin):
    list_display = ['user', 'product', 'kit_variant', 'added_on']
    list_filter = ['added_on', 'has_podpyatnik']
    search_fields = ['user__username', 'product__product_name']


admin.site.register(Product, ProductAdmin)
admin.site.register(ProductImage)

# üéØ –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∞–¥–º–∏–Ω–∫–∏
admin.site.site_header = "üõí –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –º–∞–≥–∞–∑–∏–Ω–∞ –∞–≤—Ç–æ–∫–æ–≤—Ä–∏–∫–æ–≤"
admin.site.site_title = "–ê–≤—Ç–æ–∫–æ–≤—Ä–∏–∫–∏ - –ê–¥–º–∏–Ω–∫–∞"
admin.site.index_title = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–æ–º"