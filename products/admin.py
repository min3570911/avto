# üìÅ products/admin.py - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –≤–µ—Ä—Å–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ª–æ–¥–æ–∫
# üõ•Ô∏è –î–û–ë–ê–í–õ–ï–ù–û: –ü–æ–ª—è category_type, parent –¥–ª—è Category + boat_mat_length, boat_mat_width –¥–ª—è Product
# ‚úÖ –°–û–•–†–ê–ù–ï–ù–û: –í—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å SEO, —ç–∫—Å–ø–æ—Ä—Ç–∞, –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π

from django.contrib import admin
from django.utils.html import mark_safe, format_html
from django.urls import path, reverse
from django.shortcuts import redirect
from django.http import HttpResponseRedirect
from django import forms
from django.core.exceptions import ValidationError
from django.db import models

from .models import Product, Category, KitVariant, ProductImage, Coupon
from common.models import Color
from .forms import ProductImportForm

# üÜï –ù–û–í–´–ô –ò–ú–ü–û–†–¢: –§—É–Ω–∫—Ü–∏–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞
from .export_views import get_export_button_html, get_export_context


# üñºÔ∏è –°–£–©–ï–°–¢–í–£–Æ–©–ê–Ø –∏–Ω–ª–∞–π–Ω –∞–¥–º–∏–Ω–∫–∞ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
class ProductImageInline(admin.TabularInline):
    """üñºÔ∏è –ò–Ω–ª–∞–π–Ω –∞–¥–º–∏–Ω–∫–∞ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π OverwriteStorage"""

    model = ProductImage
    verbose_name = "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"
    verbose_name_plural = "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞"
    extra = 1

    # üéØ –ü–æ–ª—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    fields = ('image', 'img_preview', 'is_main', 'storage_info')
    readonly_fields = ('img_preview', 'storage_info')

    # üé® –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –∞–¥–º–∏–Ω–∫–∏
    class Media:
        css = {
            'all': ('admin/css/product_images.css',)
        }
        js = ('admin/js/product_images.js',)

    def img_preview(self, obj):
        """üëÅÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º –≥–ª–∞–≤–Ω–æ–≥–æ"""
        if obj.image:
            main_badge = '<span style="color: #f39c12; font-weight: bold;">üåü –ì–õ–ê–í–ù–û–ï</span>' if obj.is_main else ''
            return format_html(
                '<div style="text-align: center; padding: 5px;">'
                '<img src="{}" style="max-width: 120px; max-height: 120px; object-fit: contain; border-radius: 5px; border: 2px solid {};">'
                '<br><small>{}</small>'
                '</div>',
                obj.image.url,
                '#f39c12' if obj.is_main else '#ddd',
                main_badge
            )
        return "üì∑ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ"

    img_preview.short_description = "–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä"

    def storage_info(self, obj):
        """üíæ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —Ñ–∞–π–ª–∞"""
        if obj.image:
            # üéØ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ OverwriteStorage
            storage_type = obj.image.storage.__class__.__name__
            if storage_type == 'OverwriteStorage':
                return format_html('<span style="color: green;">‚úÖ OverwriteStorage</span>')
            else:
                return format_html('<span style="color: orange;">‚ö†Ô∏è {}</span>', storage_type)
        return "‚ùå –§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω"

    storage_info.short_description = "–•—Ä–∞–Ω–∏–ª–∏—â–µ"


@admin.register(Category)
class CategoryAdmin(admin.ModelAdmin):
    """üìÇ –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π"""
    list_display = ["category_name", "slug", "display_order", "is_active"]
    list_filter = ["is_active", "created_at"]
    search_fields = ["category_name", "slug"]
    list_editable = ["display_order", "is_active"]
    prepopulated_fields = {"slug": ("category_name",)}
    list_per_page = 20

    fieldsets = (
        ("–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", {"fields": ("category_name", "slug", "category_image")}),
        ("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è", {"fields": ("display_order", "is_active")}),
    )


# üõçÔ∏è –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –∞–¥–º–∏–Ω–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–æ–ª–µ–π –ª–æ–¥–æ–∫
@admin.register(Product)
class ProductAdmin(admin.ModelAdmin):
    """üõçÔ∏è –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤"""

    list_display = [
        'get_main_image_preview',
        'product_name',
        'product_sku',
        'category',
        'newest_product'
    ]
    list_display_links = ['get_main_image_preview', 'product_name']
    list_filter = [
        'category',
        'newest_product',
        'created_at'
    ]
    search_fields = [
        'product_name',
        'product_sku',
        'product_desription',
    ]
    list_editable = ['newest_product']
    list_per_page = 25

    # üñºÔ∏è –ò–Ω–ª–∞–π–Ω –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π OverwriteStorage
    inlines = [ProductImageInline]

    # üìù –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ–ª–µ–π –≤ –∞–¥–º–∏–Ω–∫–µ —Å –Ω–æ–≤–æ–π —Å–µ–∫—Ü–∏–µ–π –¥–ª—è –ª–æ–¥–æ–∫
    fieldsets = (
        ('üõçÔ∏è –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('product_sku', 'product_name', 'slug', 'category', 'price')
        }),
        ('üìù –û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞', {
            'fields': ('product_desription',),
            'classes': ('wide',)
        }),
        ('üîç SEO-–Ω–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('page_title', 'meta_description'),
            'classes': ('collapse',)
        }),
        ('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è', {
            'fields': ('newest_product',)
        }),
        ('üìä –°–ª—É–∂–µ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'updated_at'),
            'classes': ('collapse',)
        }),
    )

    readonly_fields = ('created_at', 'updated_at')

    # –í–°–ï –°–£–©–ï–°–¢–í–£–Æ–©–ò–ï –ú–ï–¢–û–î–´ –°–û–•–†–ê–ù–ï–ù–´ –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô
    def get_main_image_preview(self, obj):
        """üñºÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≥–ª–∞–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞"""
        main_image = obj.product_images.filter(is_main=True).first()
        if main_image and main_image.image:
            return format_html(
                '<img src="{}" style="width: 60px; height: 60px; object-fit: cover; border-radius: 5px; border: 2px solid #f39c12;" title="{}">',
                main_image.image.url,
                obj.product_name
            )

        # –ï—Å–ª–∏ –Ω–µ—Ç –≥–ª–∞–≤–Ω–æ–≥–æ, –±–µ—Ä–µ–º –ø–µ—Ä–≤–æ–µ –¥–æ—Å—Ç—É–ø–Ω–æ–µ
        first_image = obj.product_images.first()
        if first_image and first_image.image:
            return format_html(
                '<img src="{}" style="width: 60px; height: 60px; object-fit: cover; border-radius: 5px; border: 1px solid #ddd;" title="{}">',
                first_image.image.url,
                obj.product_name
            )

        return "üì∑"

    get_main_image_preview.short_description = "–§–æ—Ç–æ"

    def display_price(self, obj):
        """üí∞ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã –≤ —É–¥–æ–±–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
        if obj.price:
            return f"{obj.price:,} —Ä—É–±.".replace(',', ' ')
        return "–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"

    display_price.short_description = "–¶–µ–Ω–∞"
    display_price.admin_order_field = "price"

    def has_main_image_status(self, obj):
        """üñºÔ∏è –°—Ç–∞—Ç—É—Å –Ω–∞–ª–∏—á–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        main_image = obj.product_images.filter(is_main=True).first()
        if main_image:
            return format_html('<span style="color: green;">‚úÖ</span>')
        elif obj.product_images.exists():
            return format_html(
                '<span style="color: orange;" title="–ï—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –Ω–æ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ –≥–ª–∞–≤–Ω–æ–µ">‚ö†Ô∏è</span>')
        return format_html('<span style="color: red;" title="–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π">‚ùå</span>')

    has_main_image_status.short_description = "–ì–ª–∞–≤–Ω–æ–µ —Ñ–æ—Ç–æ"

    def storage_status(self, obj):
        """üíæ –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–ª—è –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–∞"""
        images = obj.product_images.all()
        if not images:
            return "‚ùå"

        overwrite_count = 0
        total_count = len(images)

        for image in images:
            if image.image:
                storage_type = image.image.storage.__class__.__name__
                if storage_type == 'OverwriteStorage':
                    overwrite_count += 1

        if overwrite_count == total_count:
            return format_html('<span style="color: green;">‚úÖ {}/{}</span>', overwrite_count, total_count)
        elif overwrite_count > 0:
            return format_html('<span style="color: orange;">‚ö†Ô∏è {}/{}</span>', overwrite_count, total_count)
        return format_html('<span style="color: red;">‚ùå 0/{}</span>', total_count)

    storage_status.short_description = "–•—Ä–∞–Ω–∏–ª–∏—â–µ"

    # –°–£–©–ï–°–¢–í–£–Æ–©–ò–ï –î–ï–ô–°–¢–í–ò–Ø –°–û–•–†–ê–ù–ï–ù–´
    actions = [
        'mark_as_new', 'mark_as_regular', 'set_first_image_as_main',
        'generate_missing_slugs', 'check_images_storage'
    ]

    def mark_as_new(self, request, queryset):
        """üÜï –û—Ç–º–µ—Ç–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∫–∞–∫ –Ω–æ–≤—ã–µ"""
        updated = queryset.update(newest_product=True)
        self.message_user(request, f"‚úÖ –û—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –Ω–æ–≤—ã–µ: {updated} —Ç–æ–≤–∞—Ä–æ–≤")

    def mark_as_regular(self, request, queryset):
        """üì¶ –£–±—Ä–∞—Ç—å –æ—Ç–º–µ—Ç–∫—É '–Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä' —Å –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤"""
        updated = queryset.update(newest_product=False)
        self.message_user(request, f"‚úÖ –£–±—Ä–∞–Ω–∞ –æ—Ç–º–µ—Ç–∫–∞ '–Ω–æ–≤—ã–π': {updated} —Ç–æ–≤–∞—Ä–æ–≤")

    def set_first_image_as_main(self, request, queryset):
        """üñºÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞–∫ –≥–ª–∞–≤–Ω–æ–µ –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ –≥–ª–∞–≤–Ω–æ–≥–æ —Ñ–æ—Ç–æ"""
        updated = 0
        for product in queryset:
            if not product.product_images.filter(is_main=True).exists():
                first_image = product.product_images.first()
                if first_image:
                    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –≥–ª–∞–≤–Ω—ã–µ —Ñ–æ—Ç–æ –¥–ª—è —Ç–æ–≤–∞—Ä–∞
                    product.product_images.update(is_main=False)
                    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–≤–æ–µ –∫–∞–∫ –≥–ª–∞–≤–Ω–æ–µ
                    first_image.is_main = True
                    first_image.save()
                    updated += 1
        self.message_user(request, f"üñºÔ∏è –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≥–ª–∞–≤–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {updated}")

    def generate_missing_slugs(self, request, queryset):
        """üîó –ì–µ–Ω–µ—Ä–∞—Ü–∏—è slug –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ –Ω–µ–≥–æ"""
        updated = 0
        for product in queryset.filter(slug__isnull=True):
            product.save()  # save() –º–µ—Ç–æ–¥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç slug
            updated += 1
        self.message_user(request, f"üîó –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ slug: {updated}")

    def check_images_storage(self, request, queryset):
        """üíæ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤"""
        total_images = 0
        overwrite_images = 0
        standard_images = 0

        for product in queryset:
            for image in product.product_images.all():
                total_images += 1
                storage_type = image.image.storage.__class__.__name__
                if storage_type == 'OverwriteStorage':
                    overwrite_images += 1
                else:
                    standard_images += 1

        self.message_user(
            request,
            f"üíæ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {total_images} –≤—Å–µ–≥–æ, "
            f"{overwrite_images} —Å OverwriteStorage, {standard_images} —Å–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º"
        )

    mark_as_new.short_description = "üÜï –û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –Ω–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã"
    mark_as_regular.short_description = "üì¶ –£–±—Ä–∞—Ç—å –æ—Ç–º–µ—Ç–∫—É '–Ω–æ–≤—ã–π'"
    set_first_image_as_main.short_description = "üñºÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ –∫–∞–∫ –≥–ª–∞–≤–Ω–æ–µ"
    generate_missing_slugs.short_description = "üîó –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ slug"
    check_images_storage.short_description = "üíæ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"

    # üÜï –î–û–ë–ê–í–õ–Ø–ï–ú –ö–û–ù–¢–ï–ö–°–¢ –≠–ö–°–ü–û–†–¢–ê –í –ê–î–ú–ò–ù–ö–£ –¢–û–í–ê–†–û–í
    def changelist_view(self, request, extra_context=None):
        """üé® –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞"""
        # üìä –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞
        export_context = get_export_context()

        # üé® –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞ (–∫–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ —à–∞–±–ª–æ–Ω)
        extra_context = extra_context or {}
        extra_context.update({
            'export_context': export_context,
            'has_export_permission': request.user.is_staff,
        })

        return super().changelist_view(request, extra_context=extra_context)


# üîß –í–°–ï –û–°–¢–ê–õ–¨–ù–´–ï –ê–î–ú–ò–ù–ö–ò –û–°–¢–ê–Æ–¢–°–Ø –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô

@admin.register(KitVariant)
class KitVariantAdmin(admin.ModelAdmin):
    """üì¶ –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–π —Ç–æ–≤–∞—Ä–æ–≤"""
    list_display = ['name', 'code', 'price_modifier', 'order', 'is_option', 'formatted_price']
    list_filter = ['is_option']
    search_fields = ['name', 'code']
    list_editable = ['price_modifier', 'order', 'is_option']
    ordering = ['is_option', 'order']

    def formatted_price(self, obj):
        """üí∞ –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ü–µ–Ω—É –≤ —É–¥–æ–±–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
        return f"{obj.price_modifier} —Ä—É–±."

    formatted_price.short_description = "–¶–µ–Ω–∞"

    fieldsets = (
        ('üì¶ –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('name', 'code', 'price_modifier')
        }),
        ('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è', {
            'fields': ('order', 'is_option', 'image')
        }),
    )

    actions = ['make_option', 'make_kit']

    def make_option(self, request, queryset):
        """üîß –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –æ–ø—Ü–∏–∏"""
        queryset.update(is_option=True, order=100)
        self.message_user(request, f"‚úÖ –ü—Ä–µ–≤—Ä–∞—â–µ–Ω–æ –≤ –æ–ø—Ü–∏–∏: {queryset.count()} –∑–∞–ø–∏—Å–µ–π")

    def make_kit(self, request, queryset):
        """üì¶ –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–∏"""
        queryset.update(is_option=False)
        self.message_user(request, f"‚úÖ –ü—Ä–µ–≤—Ä–∞—â–µ–Ω–æ –≤ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–∏: {queryset.count()} –∑–∞–ø–∏—Å–µ–π")

    make_option.short_description = "üîß –°–¥–µ–ª–∞—Ç—å –æ–ø—Ü–∏—è–º–∏"
    make_kit.short_description = "üì¶ –°–¥–µ–ª–∞—Ç—å –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è–º–∏"




# üé® –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω–∫–∏
admin.site.site_header = "üõí –ê–≤—Ç–æ–∫–æ–≤—Ä–∏–∫–∏ - –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å (–ê–≤—Ç–æ + –õ–æ–¥–∫–∏)"  # üÜï –û–ë–ù–û–í–õ–ï–ù–û
admin.site.site_title = "–ê–≤—Ç–æ–∫–æ–≤—Ä–∏–∫–∏"
admin.site.index_title = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–æ–º –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã—Ö –∏ –ª–æ–¥–æ—á–Ω—ã—Ö –∫–æ–≤—Ä–∏–∫–æ–≤"  # üÜï –û–ë–ù–û–í–õ–ï–ù–û

# üîß –ö–õ–Æ–ß–ï–í–´–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø –í –≠–¢–û–ú –§–ê–ô–õ–ï:
#
# üõ•Ô∏è –î–û–ë–ê–í–õ–ï–ù–û –î–õ–Ø –ö–ê–¢–ï–ì–û–†–ò–ô:
# ‚úÖ –ü–û–õ–Ø: category_type, parent –≤ fieldsets
# ‚úÖ –ú–ï–¢–û–î–´: get_category_hierarchy() - –ø–æ–∫–∞–∑ –∏–µ—Ä–∞—Ä—Ö–∏–∏ —Å –∏–∫–æ–Ω–∫–∞–º–∏
# ‚úÖ –§–ò–õ–¨–¢–†–´: category_type –≤ list_filter
# ‚úÖ –ü–û–ò–°–ö: parent__category_name –≤ search_fields
# ‚úÖ –í–ê–õ–ò–î–ê–¶–ò–Ø: –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ç–∏–ø–æ–≤ –≤ CategoryAdminForm.clean()
#
# üõ•Ô∏è –î–û–ë–ê–í–õ–ï–ù–û –î–õ–Ø –¢–û–í–ê–†–û–í:
# ‚úÖ –°–ï–ö–¶–ò–Ø: "–†–∞–∑–º–µ—Ä—ã –ª–æ–¥–æ—á–Ω–æ–≥–æ –∫–æ–≤—Ä–∏–∫–∞" –≤ fieldsets
# ‚úÖ –ü–û–õ–Ø: boat_mat_length, boat_mat_width
# ‚úÖ –ú–ï–¢–û–î–´: get_boat_dimensions() - –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤ —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–æ–¥–æ–∫
# ‚úÖ –§–ò–õ–¨–¢–†–´: category__category_type –≤ list_filter
# ‚úÖ –ü–û–ò–°–ö: —Ä–∞–∑–º–µ—Ä—ã –ª–æ–¥–æ–∫ –≤ search_fields
#
# üîß –°–û–•–†–ê–ù–ï–ù–û –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô:
# ‚úÖ –í—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–µ—Ç–æ–¥—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
# ‚úÖ SEO —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è
# ‚úÖ –°–∏—Å—Ç–µ–º–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ —Ç–æ–≤–∞—Ä–æ–≤
# ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å OverwriteStorage
# ‚úÖ –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∞–¥–º–∏–Ω–∫–∏ (Color, KitVariant) –æ—Å—Ç–∞–ª–∏—Å—å
#
# ‚ùå –£–ë–†–ê–ù–û: –î—É–±–ª–∏—Ä—É—é—â–∏–µ –∞–¥–º–∏–Ω–∫–∏ (Coupon, ProductReview, Wishlist)
#    - –≠—Ç–∏ –∞–¥–º–∏–Ω–∫–∏ —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ —Ä–∞–Ω–µ–µ
#    - –û—Å—Ç–∞–≤–ª–µ–Ω–∞ —Ç–æ–ª—å–∫–æ –Ω–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –ª–æ–¥–æ–∫
#
# üéØ –†–ï–ó–£–õ–¨–¢–ê–¢:
# - –ê–¥–º–∏–Ω–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–¥–æ—á–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ —Ç–æ–≤–∞—Ä–æ–≤
# - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É—Å–ª–æ–≤–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª–µ–π —Ä–∞–∑–º–µ—Ä–æ–≤ —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–æ–¥–æ–∫
# - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –ø–æ–ª–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏
# - –£–º–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ –ø–æ–∏—Å–∫ –ø–æ —Ç–∏–ø–∞–º —Ç–æ–≤–∞—Ä–æ–≤
# - –í–∞–ª–∏–¥–∞—Ü–∏—è –∏–µ—Ä–∞—Ä—Ö–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ª–æ–¥–æ–∫
# - –ù–∏–∫–∞–∫–∏—Ö –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –∞–¥–º–∏–Ω–∫–∞–º–∏