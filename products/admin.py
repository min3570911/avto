# üìÅ products/admin.py - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø –ë–ï–ó –û–®–ò–ë–û–ö
# üõçÔ∏è –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ –∞–≤—Ç–æ–∫–æ–≤—Ä–∏–∫–æ–≤ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –∏–º–ø–æ—Ä—Ç–∞–º–∏

from django.contrib import admin
from django.utils.html import mark_safe
from .models import *

# üîß –û–ü–¶–ò–û–ù–ê–õ–¨–ù–´–ô –ò–ú–ü–û–†–¢: –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ django-summernote
try:
    from django_summernote.admin import SummernoteModelAdmin

    SUMMERNOTE_AVAILABLE = True
except ImportError:
    # üìù –ï—Å–ª–∏ Summernote –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π ModelAdmin
    SummernoteModelAdmin = admin.ModelAdmin
    SUMMERNOTE_AVAILABLE = False
    print("‚ö†Ô∏è django-summernote –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π Django –∞–¥–º–∏–Ω.")


# üñºÔ∏è –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–ø—Ä–µ–¥–µ–ª—è–µ–º ProductImageAdmin –ü–ï–†–ï–î ProductAdmin
class ProductImageAdmin(admin.StackedInline):
    """üñºÔ∏è –ò–Ω–ª–∞–π–Ω –∞–¥–º–∏–Ω–∫–∞ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤"""
    model = ProductImage
    verbose_name = "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"
    verbose_name_plural = "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞"
    extra = 1  # üì∏ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—É—Å—Ç—ã—Ö —Ñ–æ—Ä–º –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è

    # üé® –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
    fields = ('image', 'img_preview')
    readonly_fields = ('img_preview',)

    def img_preview(self, obj):
        """üëÅÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏"""
        if obj.image:
            return mark_safe(
                f'<img src="{obj.image.url}" width="150" style="border-radius: 5px; box-shadow: 0 2px 8px rgba(0,0,0,0.1);"/>'
            )
        return "üì∑ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ"

    img_preview.short_description = "–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä"


# üõçÔ∏è –ò–°–ü–†–ê–í–õ–ï–ù–û: ProductAdmin —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ProductImageAdmin
class ProductAdmin(SummernoteModelAdmin if SUMMERNOTE_AVAILABLE else admin.ModelAdmin):
    """üõçÔ∏è –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Summernote (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"""

    list_display = ['product_name', 'category', 'display_price', 'newest_product', 'get_images_count']
    list_filter = ['category', 'newest_product', 'created_at']
    search_fields = ['product_name', 'product_desription']
    list_editable = ['newest_product']  # ‚úèÔ∏è –ë—ã—Å—Ç—Ä–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

    # üñºÔ∏è –ò–°–ü–†–ê–í–õ–ï–ù–û: –¢–µ–ø–µ—Ä—å ProductImageAdmin –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –≤—ã—à–µ
    inlines = [ProductImageAdmin]

    # üìù –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ–ª–µ–π –≤ –∞–¥–º–∏–Ω–∫–µ
    fieldsets = (
        ('üõçÔ∏è –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('product_name', 'slug', 'category', 'price')
        }),
        ('üìù –û–ø–∏—Å–∞–Ω–∏–µ', {
            'fields': ('product_desription',),
            'description': 'üìù –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π'
        }),
        ('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('newest_product', 'parent'),
            'classes': ('collapse',)  # üì¶ –°–≤–æ—Ä–∞—á–∏–≤–∞–µ–º—ã–π –±–ª–æ–∫
        }),
    )

    # üîß –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ü–û–õ–Ø: Summernote –¥–ª—è –±–æ–≥–∞—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    if SUMMERNOTE_AVAILABLE:
        summernote_fields = ('product_desription',)

    def get_images_count(self, obj):
        """üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —É —Ç–æ–≤–∞—Ä–∞"""
        count = obj.product_images.count()
        if count == 0:
            return mark_safe('<span style="color: red;">‚ùå –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</span>')
        elif count < 3:
            return mark_safe(f'<span style="color: orange;">‚ö†Ô∏è {count} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</span>')
        else:
            return mark_safe(f'<span style="color: green;">‚úÖ {count} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</span>')

    get_images_count.short_description = "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"

    # üìä –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    actions = ['mark_as_new', 'mark_as_regular', 'duplicate_products']

    def mark_as_new(self, request, queryset):
        """üÜï –û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –Ω–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã"""
        updated = queryset.update(newest_product=True)
        self.message_user(request, f"‚úÖ –û—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –Ω–æ–≤—ã–µ: {updated} —Ç–æ–≤–∞—Ä–æ–≤")

    def mark_as_regular(self, request, queryset):
        """üì¶ –£–±—Ä–∞—Ç—å –æ—Ç–º–µ—Ç–∫—É '–Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä'"""
        updated = queryset.update(newest_product=False)
        self.message_user(request, f"‚úÖ –£–±—Ä–∞–Ω–∞ –æ—Ç–º–µ—Ç–∫–∞ '–Ω–æ–≤—ã–π': {updated} —Ç–æ–≤–∞—Ä–æ–≤")

    def duplicate_products(self, request, queryset):
        """üìã –î—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã"""
        duplicated = 0
        for product in queryset:
            # üîÑ –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é —Ç–æ–≤–∞—Ä–∞
            product.pk = None
            product.product_name = f"{product.product_name} (–∫–æ–ø–∏—è)"
            product.slug = f"{product.slug}-copy"
            product.save()
            duplicated += 1

        self.message_user(request, f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –∫–æ–ø–∏–π: {duplicated}")

    mark_as_new.short_description = "üÜï –û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –Ω–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã"
    mark_as_regular.short_description = "üì¶ –£–±—Ä–∞—Ç—å –æ—Ç–º–µ—Ç–∫—É '–Ω–æ–≤—ã–π'"
    duplicate_products.short_description = "üìã –î—É–±–ª–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã"


# üìÇ –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –í–°–ï–• –ú–û–î–ï–õ–ï–ô
@admin.register(Category)
class CategoryAdmin(admin.ModelAdmin):
    """üìÇ –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤"""
    list_display = ['category_name', 'slug', 'get_products_count']
    search_fields = ['category_name']
    prepopulated_fields = {'slug': ('category_name',)}

    def get_products_count(self, obj):
        """üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        count = obj.products.count()
        return f"üì¶ {count} —Ç–æ–≤–∞—Ä–æ–≤" if count > 0 else "üö´ –ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤"

    get_products_count.short_description = "–¢–æ–≤–∞—Ä—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"

    def get_readonly_fields(self, request, obj=None):
        """‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ–± —É—Å—Ç–∞—Ä–µ–≤—à–µ–π –º–æ–¥–µ–ª–∏"""
        return self.readonly_fields + ('color_name', 'price')

    def has_add_permission(self, request):
        """üö´ –ó–∞–ø—Ä–µ—â–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π"""
        return False


@admin.register(KitVariant)
class KitVariantAdmin(admin.ModelAdmin):
    """üì¶ –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–π —Ç–æ–≤–∞—Ä–æ–≤"""
    list_display = ['name', 'code', 'price_modifier', 'order', 'is_option', 'formatted_price']
    list_filter = ['is_option']
    search_fields = ['name', 'code']
    list_editable = ['price_modifier', 'order', 'is_option']
    ordering = ['is_option', 'order']

    def formatted_price(self, obj):
        """üí∞ –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ü–µ–Ω—É –≤ —É–¥–æ–±–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
        return f"{obj.price_modifier} —Ä—É–±."

    formatted_price.short_description = "–¶–µ–Ω–∞"

    fieldsets = (
        ('üì¶ –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('name', 'code', 'price_modifier')
        }),
        ('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è', {
            'fields': ('order', 'is_option', 'image')
        }),
    )

    actions = ['make_option', 'make_kit', 'reset_prices']

    def make_option(self, request, queryset):
        """üîß –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –æ–ø—Ü–∏–∏"""
        queryset.update(is_option=True, order=100)
        self.message_user(request, f"‚úÖ –ü—Ä–µ–≤—Ä–∞—â–µ–Ω–æ –≤ –æ–ø—Ü–∏–∏: {queryset.count()} –∑–∞–ø–∏—Å–µ–π")

    def make_kit(self, request, queryset):
        """üì¶ –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–∏"""
        queryset.update(is_option=False)
        self.message_user(request, f"‚úÖ –ü—Ä–µ–≤—Ä–∞—â–µ–Ω–æ –≤ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–∏: {queryset.count()} –∑–∞–ø–∏—Å–µ–π")

    make_option.short_description = "üîß –°–¥–µ–ª–∞—Ç—å –æ–ø—Ü–∏—è–º–∏"
    make_kit.short_description = "üì¶ –°–¥–µ–ª–∞—Ç—å –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è–º–∏"


@admin.register(Color)
class ColorAdmin(admin.ModelAdmin):
    """üé® –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è —Ü–≤–µ—Ç–æ–≤ –∫–æ–≤—Ä–∏–∫–æ–≤ –∏ –æ–∫–∞–Ω—Ç–æ–≤–∫–∏"""
    list_display = ['name', 'color_type', 'hex_code', 'color_preview', 'is_available', 'display_order']
    list_filter = ['color_type', 'is_available']
    list_editable = ['display_order', 'is_available']
    search_fields = ['name']
    ordering = ['color_type', 'display_order']

    def color_preview(self, obj):
        """üé® –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ü–≤–µ—Ç–Ω–æ–π –∫–≤–∞–¥—Ä–∞—Ç —Å —Ü–≤–µ—Ç–æ–º –≤ –∞–¥–º–∏–Ω–∫–µ"""
        return mark_safe(
            f'<div style="width:20px; height:20px; background-color:{obj.hex_code}; border:1px solid #666; border-radius:3px; display:inline-block;"></div>'
        )

    color_preview.short_description = "–¶–≤–µ—Ç"

    fieldsets = (
        ('üé® –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('name', 'hex_code', 'color_type', 'display_order')
        }),
        ('üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', {
            'fields': ('carpet_image', 'border_image', 'carpet_preview', 'border_preview'),
            'description': 'üì∏ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ —Ü–≤–µ—Ç–∞'
        }),
        ('‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å', {
            'fields': ('is_available',),
            'description': 'üîì –ï—Å–ª–∏ –º–∞—Ç–µ—Ä–∏–∞–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –æ—Ç–∫–ª—é—á–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–ª–∞–≥'
        }),
    )

    readonly_fields = ['carpet_preview', 'border_preview']


@admin.register(Coupon)
class CouponAdmin(admin.ModelAdmin):
    """üé´ –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –∫—É–ø–æ–Ω–æ–≤ –∏ —Å–∫–∏–¥–æ–∫"""
    list_display = ['coupon_code', 'discount_amount', 'minimum_amount', 'is_expired', 'get_status']
    list_filter = ['is_expired', 'created_at']
    list_editable = ['is_expired', 'discount_amount', 'minimum_amount']
    search_fields = ['coupon_code']

    def get_status(self, obj):
        """üîç –°—Ç–∞—Ç—É—Å –∫—É–ø–æ–Ω–∞ —Å —Ü–≤–µ—Ç–æ–≤–æ–π –∏–Ω–¥–∏–∫–∞—Ü–∏–µ–π"""
        if obj.is_expired:
            return mark_safe('<span style="color: red;">‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω</span>')
        else:
            return mark_safe('<span style="color: green;">‚úÖ –ê–∫—Ç–∏–≤–µ–Ω</span>')

    get_status.short_description = "–°—Ç–∞—Ç—É—Å"


@admin.register(ProductReview)
class ProductReviewAdmin(admin.ModelAdmin):
    """üìù –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤ –æ —Ç–æ–≤–∞—Ä–∞—Ö"""
    list_display = ['product', 'user', 'stars', 'get_content_preview', 'date_added', 'get_likes_info']
    list_filter = ['stars', 'date_added']
    search_fields = ['content', 'user__username', 'product__product_name']
    readonly_fields = ['likes', 'dislikes', 'date_added']

    def get_content_preview(self, obj):
        """üìù –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è –æ—Ç–∑—ã–≤–∞"""
        if obj.content:
            preview = obj.content[:50] + "..." if len(obj.content) > 50 else obj.content
            return preview
        return "üìù –ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"

    def get_likes_info(self, obj):
        """üëç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–∞–π–∫–∞—Ö/–¥–∏–∑–ª–∞–π–∫–∞—Ö"""
        likes = obj.like_count()
        dislikes = obj.dislike_count()
        return f"üëç {likes} / üëé {dislikes}"

    get_content_preview.short_description = "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"
    get_likes_info.short_description = "–†–µ–∞–∫—Ü–∏–∏"


@admin.register(Wishlist)
class WishlistAdmin(admin.ModelAdmin):
    """‚ù§Ô∏è –ê–¥–º–∏–Ω–∫–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤"""
    list_display = ['user', 'product', 'kit_variant', 'get_colors_info', 'has_podpyatnik', 'added_on']
    list_filter = ['added_on', 'has_podpyatnik', 'kit_variant']
    search_fields = ['user__username', 'product__product_name']
    readonly_fields = ['added_on', 'get_total_price']

    def get_colors_info(self, obj):
        """üé® –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ü–≤–µ—Ç–∞—Ö"""
        colors = []
        if obj.carpet_color:
            colors.append(f"üßΩ {obj.carpet_color.name}")
        if obj.border_color:
            colors.append(f"üñºÔ∏è {obj.border_color.name}")
        return " | ".join(colors) if colors else "üé® –¶–≤–µ—Ç–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã"

    get_colors_info.short_description = "–¶–≤–µ—Ç–∞"

    fieldsets = (
        ('‚ù§Ô∏è –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('user', 'product', 'kit_variant', 'added_on')
        }),
        ('üé® –¶–≤–µ—Ç–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('carpet_color', 'border_color'),
            'classes': ('collapse',)
        }),
        ('üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏', {
            'fields': ('has_podpyatnik', 'get_total_price'),
            'classes': ('collapse',)
        }),
    )


# üóëÔ∏è –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–±–∏—Ä–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é Product –∏ ProductImage
admin.site.register(Product, ProductAdmin)
# admin.site.register(ProductImage)  # ‚ùå –ù–µ –Ω—É–∂–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è inline

# üéØ –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∞–¥–º–∏–Ω–∫–∏
admin.site.site_header = "üõí –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –º–∞–≥–∞–∑–∏–Ω–∞ –∞–≤—Ç–æ–∫–æ–≤—Ä–∏–∫–æ–≤"
admin.site.site_title = "–ê–≤—Ç–æ–∫–æ–≤—Ä–∏–∫–∏ - –ê–¥–º–∏–Ω–∫–∞"
admin.site.index_title = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–æ–º"