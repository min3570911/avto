# üìÅ products/admin_views.py
# üõ†Ô∏è –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –≤–µ—Ä—Å–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π category_sku
# ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –ª–æ–≥–∏–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ Excel
# üÜï –î–æ–±–∞–≤–ª–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ ZIP —Ñ–∞–π–ª–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
# üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –ñ–µ—Å—Ç–∫–æ –∑–∞–¥–∞–Ω–Ω—ã–π SKU –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π

import logging
import tempfile
import openpyxl
import io
from django.shortcuts import render, redirect
from django.contrib.admin.views.decorators import staff_member_required
from django.contrib import messages
from django.http import JsonResponse
from django.views.decorators.csrf import csrf_exempt
from django.views.decorators.http import require_http_methods
from django import forms
from django.core.files.uploadedfile import InMemoryUploadedFile

from .import_processor import ProductImportProcessor, preview_excel_data
from .import_utils import read_excel_file, separate_categories_and_products, extract_category_sku
from .image_utils import process_images_zip  # üÜï –ù–æ–≤–∞—è —É—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

logger = logging.getLogger(__name__)


class ExcelUploadForm(forms.Form):
    """üìä –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø —Ñ–æ—Ä–º–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Excel —Ñ–∞–π–ª–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π ZIP"""

    excel_file = forms.FileField(
        label="–í—ã–±–µ—Ä–∏—Ç–µ Excel —Ñ–∞–π–ª",
        help_text="–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç—ã: .xlsx, .xls (–º–∞–∫—Å. 10 –ú–ë)",
        widget=forms.FileInput(attrs={
            'accept': '.xlsx,.xls',
            'class': 'form-control'
        })
    )

    # üÜï –ù–û–í–û–ï –ü–û–õ–ï: ZIP –∞—Ä—Ö–∏–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    images_zip = forms.FileField(
        label="ZIP –∞—Ä—Ö–∏–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏",
        help_text="–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç: .zip (–º–∞–∫—Å. 10 –ú–ë)",
        required=False,  # üéØ –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ
        widget=forms.FileInput(attrs={
            'accept': '.zip',
            'class': 'form-control'
        })
    )

    def clean_excel_file(self):
        """üîç –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ Excel —Ñ–∞–π–ª–∞"""

        file = self.cleaned_data.get('excel_file')

        if not file:
            raise forms.ValidationError("‚ùå –§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω")

        # üìè –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ (10 –ú–ë –º–∞–∫—Å–∏–º—É–º)
        if file.size > 10 * 1024 * 1024:
            raise forms.ValidationError(
                f"‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π: {file.size / 1024 / 1024:.1f} –ú–ë. "
                f"–ú–∞–∫—Å–∏–º—É–º: 10 –ú–ë"
            )

        # üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–∞
        allowed_extensions = ['.xlsx', '.xls']
        file_extension = file.name.lower().split('.')[-1]

        if f'.{file_extension}' not in allowed_extensions:
            raise forms.ValidationError(
                f"‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞: .{file_extension}. "
                f"–†–∞–∑—Ä–µ—à–µ–Ω—ã: {', '.join(allowed_extensions)}"
            )

        return file

    def clean_images_zip(self):
        """üÜï –ù–û–í–ê–Ø –í–ê–õ–ò–î–ê–¶–ò–Ø: ZIP –∞—Ä—Ö–∏–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏"""
        zip_file = self.cleaned_data.get('images_zip')

        # üéØ –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ (–ø–æ–ª–µ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ)
        if not zip_file:
            return zip_file

        # üìè –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ (10 –ú–ë –º–∞–∫—Å–∏–º—É–º)
        if zip_file.size > 10 * 1024 * 1024:
            raise forms.ValidationError(
                f"‚ùå ZIP –∞—Ä—Ö–∏–≤ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π: {zip_file.size / 1024 / 1024:.1f} –ú–ë. "
                f"–ú–∞–∫—Å–∏–º—É–º: 10 –ú–ë"
            )

        # üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–∞
        if not zip_file.name.lower().endswith('.zip'):
            raise forms.ValidationError(
                f"‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç –∞—Ä—Ö–∏–≤–∞. "
                f"–†–∞–∑—Ä–µ—à–µ–Ω —Ç–æ–ª—å–∫–æ .zip"
            )

        return zip_file


@staff_member_required
def import_form_view(request):
    """üìù –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Ñ–æ—Ä–º–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ Excel —Ñ–∞–π–ª–∞ + ZIP –∞—Ä—Ö–∏–≤–∞"""
    if request.method == 'POST':
        form = ExcelUploadForm(request.POST, request.FILES)

        if form.is_valid():
            try:
                excel_file = form.cleaned_data['excel_file']
                images_zip = form.cleaned_data.get('images_zip')  # üÜï ZIP —Ñ–∞–π–ª (–º–æ–∂–µ—Ç –±—ã—Ç—å None)

                # üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–∞—Ö
                request.session['uploaded_file_name'] = excel_file.name
                request.session['uploaded_file_size'] = excel_file.size

                # üÜï –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ ZIP —Ñ–∞–π–ª–µ
                if images_zip:
                    request.session['uploaded_zip_name'] = images_zip.name
                    request.session['uploaded_zip_size'] = images_zip.size
                    logger.info(f"üì¶ –ó–∞–≥—Ä—É–∂–µ–Ω ZIP –∞—Ä—Ö–∏–≤: {images_zip.name} ({images_zip.size / 1024 / 1024:.1f} –ú–ë)")
                else:
                    # üßπ –û—á–∏—â–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ ZIP –µ—Å–ª–∏ –æ–Ω –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω
                    request.session.pop('uploaded_zip_name', None)
                    request.session.pop('uploaded_zip_size', None)

                # üÜï –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –î–û –∞–Ω–∞–ª–∏–∑–∞ Excel
                images_processed = 0
                if images_zip:
                    try:
                        logger.info("üñºÔ∏è –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É ZIP –∞—Ä—Ö–∏–≤–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏...")
                        images_processed = process_images_zip(images_zip)
                        # üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                        request.session['images_processed'] = images_processed
                        messages.success(
                            request,
                            f"üñºÔ∏è –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {images_processed}"
                        )
                        logger.info(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ {images_processed} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")

                    except Exception as e:
                        error_msg = f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {str(e)}"
                        logger.error(error_msg)
                        messages.warning(request, error_msg)
                        # üîÑ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∏–º–ø–æ—Ä—Ç Excel –¥–∞–∂–µ –µ—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏—Å—å
                        request.session['images_processed'] = 0

                # üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª –¥–≤–∞–∂–¥—ã: –¥–ª—è preview –∏ –¥–ª—è –ø–æ–ª–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–∫–∞–∫ –±—ã–ª–æ)

                # üëÅÔ∏è PREVIEW: –ü–æ–ª—É—á–∞–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                excel_file.seek(0)
                preview_result = preview_excel_data(excel_file)

                if not preview_result['success']:
                    messages.error(request, f"‚ùå {preview_result['error']}")
                    return render(request, 'admin/products/import_form.html', {'form': form})

                # üìä –ü–û–õ–ù–´–ï –î–ê–ù–ù–´–ï: –ß–∏—Ç–∞–µ–º –≤–µ—Å—å —Ñ–∞–π–ª –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
                excel_file.seek(0)
                success, raw_data = read_excel_file(excel_file)

                if not success:
                    messages.error(request, f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {raw_data}")
                    return render(request, 'admin/products/import_form.html', {'form': form})

                # üîÑ –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ç–æ–≤–∞—Ä—ã (–ë–ï–ó –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π)
                categories, products, invalid_data = separate_categories_and_products(raw_data)

                # üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ü–û–õ–ù–´–ï –¥–∞–Ω–Ω—ã–µ –≤ —Å–µ—Å—Å–∏–∏
                full_data = {
                    'categories': categories,
                    'products': products,
                    'invalid_data': invalid_data,
                    'success': True
                }

                # üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–∞ –Ω–∞–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Å–µ—Å—Å–∏–∏
                request.session['preview_data'] = preview_result  # –î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                request.session['full_import_data'] = full_data  # –î–ª—è –∏–º–ø–æ—Ä—Ç–∞

                # üÜï –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ —Å —É—á–µ—Ç–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                if images_zip:
                    success_msg = f"‚úÖ –§–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã: Excel –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, {images_processed} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ"
                else:
                    success_msg = "‚úÖ Excel —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"

                messages.success(request, success_msg)
                return redirect('import_preview')

            except Exception as e:
                error_msg = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–æ–≤: {str(e)}"
                logger.error(error_msg, exc_info=True)
                messages.error(request, error_msg)

        else:
            # üìã –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
            for field, errors in form.errors.items():
                for error in errors:
                    messages.error(request, error)

    else:
        form = ExcelUploadForm()

    return render(request, 'admin/products/import_form.html', {'form': form})


@staff_member_required
def import_preview_view(request):
    """üëÅÔ∏è –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–∞–Ω–Ω—ã—Ö —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö"""
    try:
        # üìä –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–∑ —Å–µ—Å—Å–∏–∏
        preview_data = request.session.get('preview_data')

        if not preview_data:
            messages.error(request, "‚ùå –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –∑–∞–Ω–æ–≤–æ.")
            return redirect('import_form')

        if not preview_data['success']:
            messages.error(request, f"‚ùå {preview_data['error']}")
            return redirect('import_form')

        # üÜï –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö
        images_processed = request.session.get('images_processed', 0)
        zip_name = request.session.get('uploaded_zip_name', None)
        zip_size = request.session.get('uploaded_zip_size', 0)

        # üìà –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —à–∞–±–ª–æ–Ω–∞
        context = {
            'title': '–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∏–º–ø–æ—Ä—Ç–∞ —Ç–æ–≤–∞—Ä–æ–≤',
            'statistics': preview_data['statistics'],
            'categories': preview_data.get('categories', []),
            'products': preview_data.get('products', []),
            'invalid_data': preview_data['invalid_data'],
            'total_categories': preview_data.get('total_categories', 0),
            'total_products': preview_data.get('total_products', 0),
            'total_invalid': preview_data['total_invalid'],
            'file_name': request.session.get('uploaded_file_name', 'unknown.xlsx'),
            'file_size': request.session.get('uploaded_file_size', 0),
            # üÜï –ù–û–í–´–ï –¥–∞–Ω–Ω—ã–µ –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö
            'images_processed': images_processed,
            'zip_name': zip_name,
            'zip_size': zip_size,
            'has_images': images_processed > 0,
        }

        return render(request, 'admin/products/import_preview.html', context)

    except Exception as e:
        error_msg = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞: {str(e)}"
        logger.error(error_msg)
        messages.error(request, error_msg)
        return redirect('import_form')


@staff_member_required
@require_http_methods(["POST"])
def execute_import_view(request):
    """üöÄ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ï –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ —Å –ü–†–ê–í–ò–õ–¨–ù–´–ú–ò category_sku"""
    try:
        # üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        if 'confirm_import' not in request.POST:
            messages.error(request, "‚ùå –ò–º–ø–æ—Ä—Ç –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω")
            return redirect('import_preview')

        # üìä –ü–æ–ª—É—á–∞–µ–º –ü–û–õ–ù–´–ï –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–µ—Å—Å–∏–∏ (–Ω–µ preview!)
        full_data = request.session.get('full_import_data')

        if not full_data or not full_data.get('success'):
            messages.error(request, "‚ùå –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –∑–∞–Ω–æ–≤–æ.")
            return redirect('import_form')

        # üöÄ –ò–º–ø–æ—Ä—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞
        messages.info(request, "üîÑ –ó–∞–ø—É—Å–∫ –∏–º–ø–æ—Ä—Ç–∞ –í–°–ï–• —Ç–æ–≤–∞—Ä–æ–≤...")

        # üì¶ –ü–æ–ª—É—á–∞–µ–º –ü–û–õ–ù–´–ï –¥–∞–Ω–Ω—ã–µ (–≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ç–æ–≤–∞—Ä—ã)
        categories_data = full_data.get('categories', [])
        products_data = full_data.get('products', [])
        invalid_data = full_data.get('invalid_data', [])

        logger.info(f"üìä –ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç: {len(categories_data)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π, {len(products_data)} —Ç–æ–≤–∞—Ä–æ–≤")

        # üîÑ –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π Excel —Ñ–∞–π–ª —Å –ü–û–õ–ù–´–ú–ò –¥–∞–Ω–Ω—ã–º–∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
        all_rows = []

        # üìÇ –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –∏—Ö –Ω–æ–º–µ—Ä–∞–º–∏ —Å—Ç—Ä–æ–∫
        for cat in categories_data:
            all_rows.append({
                'type': 'category',
                'row_number': cat.get('row_number', 0),
                'data': cat
            })

        # üõçÔ∏è –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã —Å –∏—Ö –Ω–æ–º–µ—Ä–∞–º–∏ —Å—Ç—Ä–æ–∫
        for prod in products_data:
            all_rows.append({
                'type': 'product',
                'row_number': prod.get('row_number', 0),
                'data': prod
            })

        # üîÑ –°–û–†–¢–ò–†–£–ï–ú –ø–æ –Ω–æ–º–µ—Ä—É —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞
        all_rows.sort(key=lambda x: x['row_number'])

        logger.info(f"üìä –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Ä—è–¥–æ–∫: {len(all_rows)} —Å—Ç—Ä–æ–∫")

        # üìä –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π Excel —Ñ–∞–π–ª —Å –ü–†–ê–í–ò–õ–¨–ù–´–ú –ø–æ—Ä—è–¥–∫–æ–º
        workbook = openpyxl.Workbook()
        worksheet = workbook.active

        # üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏
        worksheet.append(['–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä', '–ù–∞–∑–≤–∞–Ω–∏–µ', 'Title', '–¶–µ–Ω–∞', '–û–ø–∏—Å–∞–Ω–∏–µ', 'Meta-–æ–ø–∏—Å–∞–Ω–∏–µ', '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'])

        # üîÑ –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ –≤ –û–†–ò–ì–ò–ù–ê–õ–¨–ù–û–ú –ø–æ—Ä—è–¥–∫–µ
        for row_info in all_rows:
            row_type = row_info['type']
            data = row_info['data']

            if row_type == 'category':
                # üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è (—Å —Ç–æ—á–∫–æ–π –≤ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–µ)
                # üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π SKU –≤–º–µ—Å—Ç–æ –∂–µ—Å—Ç–∫–æ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ "1"
                category_sku = data.get('category_sku', 1)

                worksheet.append([
                    f"{category_sku}.{data['category_name']}",  # ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ô SKU –∏–∑ –¥–∞–Ω–Ω—ã—Ö!
                    data.get('name', ''),
                    data.get('title', ''),
                    '',  # üí∞ –ü—É—Å—Ç–∞—è —Ü–µ–Ω–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                    data.get('description', ''),
                    data.get('meta_description', ''),
                    data.get('image', '')
                ])

            else:  # product
                # üõçÔ∏è –¢–æ–≤–∞—Ä (–±–µ–∑ —Ç–æ—á–∫–∏ –≤ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–µ)
                worksheet.append([
                    data.get('sku', ''),  # ‚úÖ SKU –±–µ–∑ —Ç–æ—á–∫–∏ = —Ç–æ–≤–∞—Ä
                    data.get('name', ''),
                    data.get('title', ''),
                    data.get('price', 0),
                    data.get('description', ''),
                    data.get('meta_description', ''),
                    data.get('image', '')
                ])

        # üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π –±—É—Ñ–µ—Ä
        temp_buffer = io.BytesIO()
        workbook.save(temp_buffer)
        temp_buffer.seek(0)

        # üìÅ –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª-–æ–±—ä–µ–∫—Ç –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞
        temp_file = InMemoryUploadedFile(
            temp_buffer, None, 'import_data.xlsx',
            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
            temp_buffer.getbuffer().nbytes, None
        )

        # üöÄ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä –¥–ª—è –†–ï–ê–õ–¨–ù–û–ì–û —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î
        logger.info("üîÑ –ó–∞–ø—É—Å–∫ ProductImportProcessor —Å –ü–û–õ–ù–´–ú–ò –¥–∞–Ω–Ω—ã–º–∏...")
        processor = ProductImportProcessor()
        result = processor.process_excel_file(temp_file)

        # üìä –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        logger.info(f"üìà –†–µ–∑—É–ª—å—Ç–∞—Ç –∏–º–ø–æ—Ä—Ç–∞: {result['success']}, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {result.get('statistics', {})}")

        # üßπ –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é
        for key in ['preview_data', 'full_import_data', 'uploaded_file_name', 'uploaded_file_size',
                    'uploaded_zip_name', 'uploaded_zip_size', 'images_processed']:
            request.session.pop(key, None)

        # üìà –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Å–µ—Å—Å–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        request.session['import_results'] = result

        if result['success']:
            stats = result['statistics']
            # üÜï –î–æ–ø–æ–ª–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö
            images_info = ""
            if stats.get('images_processed', 0) > 0:
                images_info = f", –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {stats.get('images_processed', 0)}"

            messages.success(
                request,
                f"‚úÖ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à—ë–Ω! "
                f"–°–æ–∑–¥–∞–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {stats.get('categories_created', 0)}, "
                f"—Ç–æ–≤–∞—Ä–æ–≤: {stats.get('products_created', 0)}, "
                f"–æ–±–Ω–æ–≤–ª–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {stats.get('categories_updated', 0)}, "
                f"—Ç–æ–≤–∞—Ä–æ–≤: {stats.get('products_updated', 0)}"
                f"{images_info}, "
                f"–æ—à–∏–±–æ–∫: {stats.get('errors', 0)}"
            )
        else:
            messages.error(request, f"‚ùå –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à—ë–Ω —Å –æ—à–∏–±–∫–∞–º–∏: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")

        return redirect('import_results')

    except Exception as e:
        error_msg = f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ: {str(e)}"
        logger.error(error_msg, exc_info=True)
        messages.error(request, error_msg)
        return redirect('import_form')


@staff_member_required
def import_results_view(request):
    """üìà –ù–ï–ò–ó–ú–ï–ù–ï–ù–ù–ê–Ø —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–º–ø–æ—Ä—Ç–∞"""
    try:
        # üìä –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–∑ —Å–µ—Å—Å–∏–∏
        results = request.session.get('import_results')

        if not results:
            messages.warning(request, "‚ö†Ô∏è –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–º–ø–æ—Ä—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return redirect('import_form')

        # üìà –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        context = {
            'title': '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–º–ø–æ—Ä—Ç–∞ —Ç–æ–≤–∞—Ä–æ–≤',
            'results': results,
            'statistics': results.get('statistics', {}),
            'errors': results.get('errors', []),
            'invalid_data': results.get('invalid_data', []),
        }

        # üßπ –û—á–∏—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–∑ —Å–µ—Å—Å–∏–∏ –ø–æ—Å–ª–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        request.session.pop('import_results', None)

        return render(request, 'admin/products/import_results.html', context)

    except Exception as e:
        error_msg = f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {str(e)}"
        logger.error(error_msg)
        messages.error(request, error_msg)
        return redirect('import_form')


@staff_member_required
@csrf_exempt
def ajax_validate_file(request):
    """‚ö° –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø AJAX –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ (Excel + ZIP)"""
    if request.method != 'POST':
        return JsonResponse({'success': False, 'error': '–ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è'})

    try:
        if 'file' not in request.FILES:
            return JsonResponse({'success': False, 'error': '–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω'})

        file = request.FILES['file']

        # üÜï –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
        file_extension = file.name.lower().split('.')[-1]

        if file_extension in ['xlsx', 'xls']:
            # ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è Excel —Ñ–∞–π–ª–∞
            form = ExcelUploadForm()
            form.cleaned_data = {'excel_file': file}

            try:
                form.clean_excel_file()

                # üìä –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–∞
                preview_result = preview_excel_data(file)

                if preview_result['success']:
                    return JsonResponse({
                        'success': True,
                        'message': 'Excel —Ñ–∞–π–ª –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω',
                        'file_type': 'excel',
                        'statistics': preview_result['statistics']
                    })
                else:
                    return JsonResponse({
                        'success': False,
                        'error': preview_result['error']
                    })

            except forms.ValidationError as e:
                return JsonResponse({'success': False, 'error': str(e)})

        elif file_extension == 'zip':
            # üÜï –í–∞–ª–∏–¥–∞—Ü–∏—è ZIP —Ñ–∞–π–ª–∞
            form = ExcelUploadForm()
            form.cleaned_data = {'images_zip': file}

            try:
                form.clean_images_zip()

                # üìä –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ ZIP
                import zipfile
                with zipfile.ZipFile(file, 'r') as zip_file:
                    file_count = len([f for f in zip_file.namelist()
                                      if not f.startswith('__MACOSX') and not f.endswith('/')])

                return JsonResponse({
                    'success': True,
                    'message': f'ZIP –∞—Ä—Ö–∏–≤ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω ({file_count} —Ñ–∞–π–ª–æ–≤)',
                    'file_type': 'zip',
                    'file_count': file_count
                })

            except forms.ValidationError as e:
                return JsonResponse({'success': False, 'error': str(e)})
        else:
            return JsonResponse({
                'success': False,
                'error': f'–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞: .{file_extension}'
            })

    except Exception as e:
        return JsonResponse({
            'success': False,
            'error': f'–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}'
        })

# üîß –ö–†–ò–¢–ò–ß–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í –≠–¢–û–ú –§–ê–ô–õ–ï:
#
# ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: f"1.{data['category_name']}" ‚Üí f"{category_sku}.{data['category_name']}"
# ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ category_sku –∏–∑ –¥–∞–Ω–Ω—ã—Ö
# ‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢: –¢–µ–ø–µ—Ä—å –∫–∞–∂–¥–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –ø–æ–ª—É—á–∞–µ—Ç –ü–†–ê–í–ò–õ–¨–ù–´–ô SKU:
#   - BMW: SKU = 1
#   - Acura: SKU = 2
#   - Alfa Romeo: SKU = 3
#
# üéØ –û–î–ù–ê –°–¢–†–û–ß–ö–ê –ö–û–î–ê –ë–´–õ–ê –ü–†–ò–ß–ò–ù–û–ô –í–°–ï–• –ü–†–û–ë–õ–ï–ú!