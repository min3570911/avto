# üìÅ products/storage.py
# üõ†Ô∏è –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –≤–µ—Ä—Å–∏—è —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ —Ñ–∞–π–ª–æ–≤ Windows
# üíæ –ö–∞—Å—Ç–æ–º–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Ç–æ—á–Ω—ã—Ö –∏–º—ë–Ω —Ñ–∞–π–ª–æ–≤ –ë–ï–ó —Ö–µ—à-—Å—É—Ñ—Ñ–∏–∫—Å–æ–≤

import os
import time
import logging
import tempfile
import shutil
from django.core.files.storage import FileSystemStorage
from django.conf import settings

logger = logging.getLogger(__name__)

# ‚è±Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫
MAX_RETRIES = 3
RETRY_DELAY = 0.5  # —Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏


class OverwriteStorage(FileSystemStorage):
    """
    üóÇÔ∏è –ö–∞—Å—Ç–æ–º–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —Å –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤

    üõ†Ô∏è –û–ë–ù–û–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞—â–∏—Ç–∞ –æ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ —Ñ–∞–π–ª–æ–≤ Windows

    –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
    - üéØ –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ñ–∞–π–ª—ã —Å —Ç–æ—á–Ω—ã–º –∏–º–µ–Ω–µ–º (–±–µ–∑ —Ö–µ—à-—Å—É—Ñ—Ñ–∏–∫—Å–æ–≤)
    - üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã
    - üìÅ –°–æ–∑–¥–∞—ë—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    - üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    - üîí –ó–∞—â–∏—Ç–∞ –æ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ —Ñ–∞–π–ª–æ–≤ (WinError 32)

    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è:
    - Category.category_image
    - ProductImage.image
    """

    def get_available_name(self, name, max_length=None):
        """
        üéØ –ö–õ–Æ–ß–ï–í–û–ô –ú–ï–¢–û–î: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ—á–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞

        üõ†Ô∏è –û–ë–ù–û–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞—â–∏—Ç–∞ –æ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫

        –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ FileSystemStorage, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–ª—è–µ—Ç
        —Ö–µ—à-—Å—É—Ñ—Ñ–∏–∫—Å—ã (_ABC123.jpg), —ç—Ç–æ—Ç –º–µ—Ç–æ–¥:
        1. –£–¥–∞–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        2. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–º—è

        Args:
            name: –ò—Å—Ö–æ–¥–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "BMW.png")
            max_length: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∏–º–µ–Ω–∏ (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)

        Returns:
            str: –¢–æ –∂–µ —Å–∞–º–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        """
        # üìÅ –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
        full_path = self.path(name)

        try:
            # üóÇÔ∏è –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
            directory = os.path.dirname(full_path)
            if directory and not os.path.exists(directory):
                os.makedirs(directory, exist_ok=True)
                logger.debug(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {directory}")

            # üîÑ –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å (—Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫)
            if os.path.exists(full_path):
                success = self._safe_delete_file(full_path)
                if success:
                    logger.info(f"üóëÔ∏è –£–¥–∞–ª—ë–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª: {name}")
                else:
                    logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª: {name}")

            # üéØ –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–º—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
            logger.debug(f"‚úÖ –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ –∏–º—è —Ñ–∞–π–ª–∞: {name}")
            return name

        except OSError as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ —Ñ–∞–π–ª–∞ {name}: {e}")
            # üõ°Ô∏è –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–º—è
            # Django –ø–æ–ø—ã—Ç–∞–µ—Ç—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª –∏ –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç –æ—à–∏–±–∫—É —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ
            return name
        except Exception as e:
            logger.error(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {name}: {e}")
            return name

    def _safe_delete_file(self, file_path: str) -> bool:
        """
        üóëÔ∏è üÜï –ù–û–í–´–ô –ú–ï–¢–û–î: –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫

        Args:
            file_path: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è

        Returns:
            bool: True –µ—Å–ª–∏ —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω
        """
        for attempt in range(MAX_RETRIES):
            try:
                if os.path.exists(file_path):
                    # üîì –ü–æ–ø—ã—Ç–∫–∞ —Å–Ω—è—Ç—å –∞—Ç—Ä–∏–±—É—Ç—ã —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è
                    try:
                        os.chmod(file_path, 0o777)
                    except:
                        pass

                    os.unlink(file_path)
                    logger.debug(f"üóëÔ∏è –§–∞–π–ª —É–¥–∞–ª–µ–Ω (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}): {file_path}")
                    return True
                else:
                    return True  # –§–∞–π–ª —É–∂–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç

            except PermissionError as e:
                if attempt < MAX_RETRIES - 1:
                    logger.debug(f"üîí –§–∞–π–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}): {file_path}")
                    time.sleep(RETRY_DELAY * (attempt + 1))
                else:
                    logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª: {file_path}: {e}")

            except OSError as e:
                if "WinError 32" in str(e) or "being used by another process" in str(e):
                    if attempt < MAX_RETRIES - 1:
                        logger.debug(f"üîí Windows –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}): {file_path}")
                        time.sleep(RETRY_DELAY * (attempt + 2))
                    else:
                        logger.warning(f"‚ö†Ô∏è Windows –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–µ —Å–Ω—è—Ç–∞: {file_path}: {e}")
                else:
                    logger.error(f"‚ùå OS –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: {file_path}: {e}")
                    break

            except Exception as e:
                logger.error(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {file_path}: {e}")
                break

        return False

    def save(self, name, content, max_length=None):
        """
        üíæ –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π –º–µ—Ç–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º

        üõ†Ô∏è –û–ë–ù–û–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω –º–µ—Ö–∞–Ω–∏–∑–º –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫

        Args:
            name: –ò–º—è —Ñ–∞–π–ª–∞
            content: –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
            max_length: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∏–º–µ–Ω–∏

        Returns:
            str: –ò—Ç–æ–≥–æ–≤–æ–µ –∏–º—è —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        """
        # üìù –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        logger.info(f"üíæ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞: {name}")

        # üîÑ –ü–æ–ø—ã—Ç–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å –ø–æ–≤—Ç–æ—Ä–∞–º–∏
        for attempt in range(MAX_RETRIES):
            try:
                # üéØ –í—ã–∑—ã–≤–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –º–µ—Ç–æ–¥ save
                # get_available_name —É–∂–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª –ø—É—Ç—å –∏ —É–¥–∞–ª–∏–ª —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª
                saved_name = self._atomic_save(name, content, max_length, attempt)

                if saved_name:
                    # ‚úÖ –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
                    file_path = self.path(saved_name)
                    file_size = os.path.getsize(file_path) if os.path.exists(file_path) else 0

                    logger.info(
                        f"‚úÖ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}): {saved_name} "
                        f"(—Ä–∞–∑–º–µ—Ä: {file_size / 1024:.1f} KB, –ø—É—Ç—å: {file_path})"
                    )
                    return saved_name

                # ‚è±Ô∏è –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
                if attempt < MAX_RETRIES - 1:
                    logger.warning(f"‚è≥ –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1} –Ω–µ—É–¥–∞—á–Ω–∞ –¥–ª—è {name}, –ø–æ–≤—Ç–æ—Ä—è–µ–º —á–µ—Ä–µ–∑ {RETRY_DELAY}—Å...")
                    time.sleep(RETRY_DELAY * (attempt + 1))

            except PermissionError as e:
                logger.warning(f"üîí –§–∞–π–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω {name} (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}): {e}")
                if attempt < MAX_RETRIES - 1:
                    time.sleep(RETRY_DELAY * (attempt + 1))

            except OSError as e:
                # üîç –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ Windows –æ—à–∏–±–æ–∫
                if "WinError 32" in str(e) or "being used by another process" in str(e):
                    logger.warning(f"üîí Windows –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ñ–∞–π–ª–∞ {name} (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}): {e}")
                    if attempt < MAX_RETRIES - 1:
                        time.sleep(RETRY_DELAY * (attempt + 2))
                else:
                    logger.error(f"‚ùå OS –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ {name}: {e}")
                    break

            except Exception as e:
                logger.error(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è {name}: {e}")
                break

        # ‚ùå –ï—Å–ª–∏ –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ—É–¥–∞—á–Ω—ã, –ø—Ä–æ–±—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ—Ç–æ–¥
        try:
            logger.warning(f"‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –º–µ—Ç–æ–¥ –¥–ª—è {name}")
            saved_name = super().save(name, content, max_length)
            logger.info(f"‚úÖ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω —á–µ—Ä–µ–∑ fallback: {saved_name}")
            return saved_name
        except Exception as fallback_error:
            error_msg = f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª {name} –ø–æ—Å–ª–µ {MAX_RETRIES} –ø–æ–ø—ã—Ç–æ–∫: {fallback_error}"
            logger.error(error_msg)
            raise OSError(error_msg)

    def _atomic_save(self, name, content, max_length, attempt):
        """
        ‚öõÔ∏è üÜï –ù–û–í–´–ô –ú–ï–¢–û–î: –ê—Ç–æ–º–∞—Ä–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —á–µ—Ä–µ–∑ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª

        Args:
            name: –ò–º—è —Ñ–∞–π–ª–∞
            content: –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
            max_length: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∏–º–µ–Ω–∏
            attempt: –ù–æ–º–µ—Ä –ø–æ–ø—ã—Ç–∫–∏ (–¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è)

        Returns:
            str|None: –ò–º—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ
        """
        try:
            # üìÇ –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏
            final_path = self.path(name)
            temp_dir = os.path.dirname(final_path)

            # üóÇÔ∏è –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤ —Ç–æ–π –∂–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
            with tempfile.NamedTemporaryFile(
                    dir=temp_dir,
                    delete=False,
                    suffix='.tmp'
            ) as temp_file:
                temp_path = temp_file.name

                # üíæ –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                if hasattr(content, 'chunks'):
                    # üì¶ –ï—Å–ª–∏ —ç—Ç–æ Django File, —á–∏—Ç–∞–µ–º –ø–æ —á–∞—Å—Ç—è–º
                    for chunk in content.chunks():
                        temp_file.write(chunk)
                else:
                    # üìù –ï—Å–ª–∏ —ç—Ç–æ –±–∞–π—Ç—ã –∏–ª–∏ —Å—Ç—Ä–æ–∫–∞
                    if isinstance(content, str):
                        temp_file.write(content.encode('utf-8'))
                    else:
                        temp_file.write(content)

                temp_file.flush()  # üíæ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞ –¥–∏—Å–∫
                os.fsync(temp_file.fileno())  # üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π

            # üîÑ –ê—Ç–æ–º–∞—Ä–Ω–æ –ø–µ—Ä–µ–º–µ—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–∞ –º–µ—Å—Ç–æ —Ü–µ–ª–µ–≤–æ–≥–æ
            shutil.move(temp_path, final_path)

            logger.debug(f"üíæ –ê—Ç–æ–º–∞—Ä–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}): {name}")
            return name

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∞—Ç–æ–º–∞—Ä–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}): {name}: {e}")

            # üßπ –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                if 'temp_path' in locals() and os.path.exists(temp_path):
                    os.unlink(temp_path)
            except:
                pass

            return None

    def delete(self, name):
        """
        üóëÔ∏è –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π –º–µ—Ç–æ–¥ —É–¥–∞–ª–µ–Ω–∏—è —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º

        üõ†Ô∏è –û–ë–ù–û–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ

        Args:
            name: –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        """
        try:
            file_path = self.path(name)

            if os.path.exists(file_path):
                logger.info(f"üóëÔ∏è –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª: {name}")
                success = self._safe_delete_file(file_path)
                if success:
                    logger.info(f"‚úÖ –§–∞–π–ª —É–¥–∞–ª—ë–Ω: {name}")
                else:
                    logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª: {name}")
            else:
                logger.warning(f"‚ö†Ô∏è –§–∞–π–ª –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω: {name}")

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {name}: {e}")
            # üîÑ –ü—Ä–æ–±—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –∫–∞–∫ fallback
            try:
                super().delete(name)
                logger.info(f"‚úÖ –§–∞–π–ª —É–¥–∞–ª–µ–Ω —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º –º–µ—Ç–æ–¥–æ–º: {name}")
            except Exception as fallback_error:
                logger.error(f"‚ùå Fallback —É–¥–∞–ª–µ–Ω–∏–µ —Ç–∞–∫–∂–µ –Ω–µ—É–¥–∞—á–Ω–æ –¥–ª—è {name}: {fallback_error}")

    def exists(self, name):
        """
        üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º

        Args:
            name: –ò–º—è —Ñ–∞–π–ª–∞

        Returns:
            bool: True –µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        """
        try:
            exists = super().exists(name)
            logger.debug(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ {name}: {'—Å—É—â–µ—Å—Ç–≤—É–µ—Ç' if exists else '–Ω–µ –Ω–∞–π–¥–µ–Ω'}")
            return exists

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–∞ {name}: {e}")
            return False

    def url(self, name):
        """
        üåê –ü–æ–ª—É—á–µ–Ω–∏–µ URL —Ñ–∞–π–ª–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫

        Args:
            name: –ò–º—è —Ñ–∞–π–ª–∞

        Returns:
            str: URL —Ñ–∞–π–ª–∞
        """
        try:
            url = super().url(name)
            logger.debug(f"üåê URL —Ñ–∞–π–ª–∞ {name}: {url}")
            return url

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è URL –¥–ª—è {name}: {e}")
            # üõ°Ô∏è –í–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤—ã–π URL –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            return f"{settings.MEDIA_URL}{name}"

    def size(self, name):
        """
        üìè –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫

        Args:
            name: –ò–º—è —Ñ–∞–π–ª–∞

        Returns:
            int: –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –±–∞–π—Ç–∞—Ö
        """
        try:
            size = super().size(name)
            logger.debug(f"üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ {name}: {size / 1024:.1f} KB")
            return size

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ {name}: {e}")
            return 0


class SecureOverwriteStorage(OverwriteStorage):
    """
    üîí –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è OverwriteStorage —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏

    üõ†Ô∏è –û–ë–ù–û–í–õ–ï–ù–û: –£–Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–æ –æ—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ OverwriteStorage

    –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
    - üõ°Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π —Ñ–∞–π–ª–æ–≤
    - üìè –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–æ–≤
    - üö´ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ–ø–∞—Å–Ω—ã—Ö –∏–º—ë–Ω —Ñ–∞–π–ª–æ–≤
    - üîí –í—Å–µ –∑–∞—â–∏—Ç—ã –æ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –∏–∑ OverwriteStorage
    """

    def __init__(self, location=None, base_url=None, file_permissions_mode=None,
                 directory_permissions_mode=None, allowed_extensions=None,
                 max_file_size=None):
        """
        üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏

        Args:
            allowed_extensions: –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, ['.jpg', '.png'])
            max_file_size: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –±–∞–π—Ç–∞—Ö
        """
        super().__init__(location, base_url, file_permissions_mode, directory_permissions_mode)

        # üõ°Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        self.allowed_extensions = allowed_extensions or ['.jpg', '.jpeg', '.png', '.webp', '.gif']
        self.max_file_size = max_file_size or 5 * 1024 * 1024  # 5MB –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

        # üö´ –ó–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤
        self.forbidden_names = [
            'con', 'prn', 'aux', 'nul',  # Windows reserved names
            '.htaccess', '.htpasswd',  # Apache config files
            'index.php', 'index.html',  # –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –æ–ø–∞—Å–Ω—ã–µ —Ñ–∞–π–ª—ã
        ]

        logger.info(
            f"üîí SecureOverwriteStorage –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: "
            f"—Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è {self.allowed_extensions}, "
            f"–º–∞–∫—Å. —Ä–∞–∑–º–µ—Ä {self.max_file_size / 1024 / 1024:.1f}MB"
        )

    def get_available_name(self, name, max_length=None):
        """üîí –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –≤–µ—Ä—Å–∏—è get_available_name —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏"""

        # üõ°Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–∞
        file_extension = os.path.splitext(name)[1].lower()
        if file_extension not in self.allowed_extensions:
            error_msg = f"‚ùå –ù–µ—Ä–∞–∑—Ä–µ—à—ë–Ω–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞: {file_extension}"
            logger.error(error_msg)
            raise ValueError(error_msg)

        # üö´ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö –∏–º—ë–Ω
        base_name = os.path.splitext(os.path.basename(name))[0].lower()
        if base_name in self.forbidden_names:
            error_msg = f"‚ùå –ó–∞–ø—Ä–µ—â—ë–Ω–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞: {base_name}"
            logger.error(error_msg)
            raise ValueError(error_msg)

        # ‚úÖ –ï—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –º–µ—Ç–æ–¥
        return super().get_available_name(name, max_length)

    def save(self, name, content, max_length=None):
        """üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ä–∞–∑–º–µ—Ä–∞"""

        # üìè –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
        if hasattr(content, 'size') and content.size > self.max_file_size:
            error_msg = (
                f"‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π: {content.size / 1024 / 1024:.1f}MB. "
                f"–ú–∞–∫—Å–∏–º—É–º: {self.max_file_size / 1024 / 1024:.1f}MB"
            )
            logger.error(error_msg)
            raise ValueError(error_msg)

        # ‚úÖ –ï—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        return super().save(name, content, max_length)


# üéØ –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ü–µ–ª–µ–π

# üìÅ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
default_overwrite_storage = OverwriteStorage()

# üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∑–∞–≥—Ä—É–∑–æ–∫
secure_image_storage = SecureOverwriteStorage(
    allowed_extensions=['.jpg', '.jpeg', '.png', '.webp'],
    max_file_size=5 * 1024 * 1024  # 5MB
)

# üìã –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (–µ—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è)
document_storage = SecureOverwriteStorage(
    allowed_extensions=['.pdf', '.doc', '.docx', '.txt'],
    max_file_size=10 * 1024 * 1024  # 10MB
)

# üîß –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –í –ú–û–î–ï–õ–Ø–•:
#
# from .storage import OverwriteStorage
#
# class Category(models.Model):
#     category_image = models.ImageField(
#         upload_to="categories",
#         storage=OverwriteStorage()  # üéØ –¢–æ—á–Ω—ã–µ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤
#     )
#
# class ProductImage(models.Model):
#     image = models.ImageField(
#         upload_to='product',
#         storage=OverwriteStorage()  # üéØ –¢–æ—á–Ω—ã–µ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤
#     )

# üéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø:
#
# ‚ùå –ë–ï–ó OverwriteStorage:
# - BMW.png ‚Üí BMW_ABC123.png (—Å —Ö–µ—à-—Å—É—Ñ—Ñ–∏–∫—Å–æ–º)
# - –ü—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ ‚Üí BMW_DEF456.png
#
# ‚úÖ –° OverwriteStorage:
# - BMW.png ‚Üí BMW.png (—Ç–æ—á–Ω–æ–µ –∏–º—è)
# - –ü—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ ‚Üí BMW.png (–ø–µ—Ä–µ–∑–∞–ø–∏—Å—å)
#
# üîó –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–¨:
# - image_utils.py ‚Üí —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç BMW.png –≤ media/categories/
# - OverwriteStorage ‚Üí Django —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–∞–∫ BMW.png –±–µ–∑ —Å—É—Ñ—Ñ–∏–∫—Å–æ–≤
# - import_processor.py ‚Üí –Ω–∞—Ö–æ–¥–∏—Ç —Ñ–∞–π–ª –ø–æ —Ç–æ—á–Ω–æ–º—É –∏–º–µ–Ω–∏ BMW.png

# üîß –ö–õ–Æ–ß–ï–í–´–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø –í –≠–¢–û–ú –§–ê–ô–õ–ï:
#
# ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: _safe_delete_file() - –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
# ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: _atomic_save() - –∞—Ç–æ–º–∞—Ä–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
# ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: MAX_RETRIES, RETRY_DELAY - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫
# ‚úÖ –ò–ó–ú–ï–ù–ï–ù–û: get_available_name() - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
# ‚úÖ –ò–ó–ú–ï–ù–ï–ù–û: save() - –¥–æ–±–∞–≤–ª–µ–Ω –º–µ—Ö–∞–Ω–∏–∑–º –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫
# ‚úÖ –ò–ó–ú–ï–ù–ï–ù–û: delete() - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
# ‚úÖ –°–û–•–†–ê–ù–ï–ù–û: –í—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –ª–æ–≥–∏–∫–∞ —Ç–æ—á–Ω—ã—Ö –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤
#
# üéØ –†–ï–ó–£–õ–¨–¢–ê–¢:
# - –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ —Ñ–∞–π–ª–æ–≤ Windows
# - –ê—Ç–æ–º–∞—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
# - Fallback –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
# - –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
# - –ü–æ–ª–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å